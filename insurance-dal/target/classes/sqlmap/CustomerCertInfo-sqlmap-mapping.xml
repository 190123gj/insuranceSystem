<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table customer_cert_info -->
    <resultMap id="RM-CUSTOMER-CERT-INFO" class="com.born.insurance.dal.dataobject.CustomerCertInfoDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certType" column="cert_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certTypeName" column="cert_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certNo" column="cert_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certExpDate" column="cert_exp_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="longTime" column="long_time" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sortOrder" column="sort_order" javaType="long" jdbcType="BIGINT" nullValue="0"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCustomerCertInfoDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCustomerCertInfoDAO.insert -->
    <insert id="MS-CUSTOMER-CERT-INFO-INSERT">
        INSERT /*MS-YRD-CUSTOMER-CERT-INFO-INSERT*/ INTO customer_cert_info(id,user_id,customer_name,cert_type,cert_type_name,cert_no,cert_exp_date,long_time,sort_order) VALUES (#id#,#userId#,#customerName#,#certType#,#certTypeName#,#certNo#,#certExpDate#,#longTime#,#sortOrder#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisCustomerCertInfoDAO.update -->
    <update id="MS-CUSTOMER-CERT-INFO-UPDATE">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-CERT-INFO-UPDATE*/ customer_cert_info set user_id=#userId#, customer_name=#customerName#, cert_type=#certType#, cert_type_name=#certTypeName#, cert_no=#certNo#, cert_exp_date=#certExpDate#, long_time=#longTime#, sort_order=#sortOrder# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerCertInfoDAO.findById -->
    <select id="MS-CUSTOMER-CERT-INFO-FIND-BY-ID" resultMap="RM-CUSTOMER-CERT-INFO">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-CERT-INFO-FIND-BY-ID*/ id, user_id, customer_name, cert_type, cert_type_name, cert_no, cert_exp_date, long_time, sort_order from customer_cert_info where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerCertInfoDAO.deleteById -->
    <delete id="MS-CUSTOMER-CERT-INFO-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-CERT-INFO-DELETE-BY-ID*/ from customer_cert_info where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerCertInfoDAO.deleteByUserId -->
    <delete id="MS-CUSTOMER-CERT-INFO-DELETE-BY-USER-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-CERT-INFO-DELETE-BY-USER-ID*/ from customer_cert_info where (user_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerCertInfoDAO.findByCondition -->
    <select id="MS-CUSTOMER-CERT-INFO-FIND-BY-CONDITION" resultMap="RM-CUSTOMER-CERT-INFO">
        SELECT /*MS-YRD-CUSTOMER-CERT-INFO-FIND-BY-CONDITION*/  id ,user_id ,customer_name ,cert_type ,cert_type_name ,cert_no ,cert_exp_date ,long_time ,sort_order  FROM customer_cert_info WHERE 1=1
           <dynamic>
                  <isGreaterThan property="customerCertInfo.userId"  compareValue="0" prepend=" and ">
	                user_id = #customerCertInfo.userId#
	            </isGreaterThan>
			</dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisCustomerCertInfoDAO.findByConditionCount -->
    <select id="MS-CUSTOMER-CERT-INFO-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-CERT-INFO-FIND-BY-CONDITION-COUNT*/  count(*) FROM customer_cert_info  where 1=1
	           <dynamic>
                  <isGreaterThan property="customerCertInfo.userId"  compareValue="0" prepend=" and ">
	                user_id = #customerCertInfo.userId#
	            </isGreaterThan>
			</dynamic>
    </select>

</sqlMap>
