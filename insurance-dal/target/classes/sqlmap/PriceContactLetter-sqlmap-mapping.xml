<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table price_contact_letter -->
    <resultMap id="RM-PRICE-CONTACT-LETTER" class="com.born.insurance.dal.dataobject.PriceContactLetterDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="priceType" column="price_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="priceTemplate" column="price_template" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="catalogId" column="catalog_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="catalogName" column="catalog_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessConditionId" column="business_condition_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="businessConditions" column="business_conditions" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessUserId" column="business_user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessUserName" column="business_user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="projectSetupId" column="project_setup_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="projectSetupName" column="project_setup_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="billNo" column="bill_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerType" column="customer_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerUserId" column="customer_user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerUserName" column="customer_user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerCertType" column="customer_cert_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerCertNo" column="customer_cert_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="creatorId" column="creator_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="creatorName" column="creator_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="specialReq" column="special_req" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="askDate" column="ask_date" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="version" column="version" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ext" column="ext" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPriceContactLetterDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPriceContactLetterDAO.insert -->
    <insert id="MS-PRICE-CONTACT-LETTER-INSERT">
        INSERT /*MS-YRD-PRICE-CONTACT-LETTER-INSERT*/ INTO price_contact_letter(id,price_type,price_template,catalog_id,catalog_name,business_condition_id,business_conditions,business_user_id,business_user_name,project_setup_id,project_setup_name,name,bill_no,customer_type,customer_user_id,customer_user_name,customer_cert_type,customer_cert_no,creator_id,creator_name,form_id,status,raw_add_time,special_req,ask_date,version,ext) VALUES (#id#,#priceType#,#priceTemplate#,#catalogId#,#catalogName#,#businessConditionId#,#businessConditions#,#businessUserId#,#businessUserName#,#projectSetupId#,#projectSetupName#,#name#,#billNo#,#customerType#,#customerUserId#,#customerUserName#,#customerCertType#,#customerCertNo#,#creatorId#,#creatorName#,#formId#,#status#,#rawAddTime#,#specialReq#,#askDate#,#version#,#ext#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisPriceContactLetterDAO.findByFormId -->
    <select id="MS-PRICE-CONTACT-LETTER-FIND-BY-FORM-ID" resultMap="RM-PRICE-CONTACT-LETTER">
    <![CDATA[
        select /*MS-YRD-PRICE-CONTACT-LETTER-FIND-BY-FORM-ID*/ id, price_type, price_template, catalog_id, catalog_name, business_condition_id, business_conditions, business_user_id, business_user_name, project_setup_id, project_setup_name, name, bill_no, customer_type, customer_user_id, customer_user_name, customer_cert_type, customer_cert_no, creator_id, creator_name, form_id, status, raw_add_time, raw_update_time, version, ext, special_req, ask_date from price_contact_letter where (form_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPriceContactLetterDAO.update -->
    <update id="MS-PRICE-CONTACT-LETTER-UPDATE">
    <![CDATA[
        update /*MS-YRD-PRICE-CONTACT-LETTER-UPDATE*/ price_contact_letter set price_type=#priceType#, price_template=#priceTemplate#, catalog_id=#catalogId#, catalog_name=#catalogName#, business_condition_id=#businessConditionId#, business_conditions=#businessConditions#, business_user_id=#businessUserId#, business_user_name=#businessUserName#, project_setup_id=#projectSetupId#, project_setup_name=#projectSetupName#, name=#name#, bill_no=#billNo#, customer_type=#customerType#, customer_user_id=#customerUserId#, customer_user_name=#customerUserName#, customer_cert_type=#customerCertType#, customer_cert_no=#customerCertNo#, creator_id=#creatorId#, creator_name=#creatorName#, form_id=#formId#, status=#status#, special_req=#specialReq#, ask_date=#askDate#, version=#version#, ext=#ext# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPriceContactLetterDAO.findById -->
    <select id="MS-PRICE-CONTACT-LETTER-FIND-BY-ID" resultMap="RM-PRICE-CONTACT-LETTER">
    <![CDATA[
        select /*MS-YRD-PRICE-CONTACT-LETTER-FIND-BY-ID*/ id, price_type, price_template, catalog_id, catalog_name, business_condition_id, business_conditions, business_user_id, business_user_name, project_setup_id, project_setup_name, name, bill_no, customer_type, customer_user_id, customer_user_name, customer_cert_type, customer_cert_no, creator_id, creator_name, form_id, status, raw_add_time, raw_update_time, special_req, ask_date, version, ext from price_contact_letter where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPriceContactLetterDAO.deleteById -->
    <delete id="MS-PRICE-CONTACT-LETTER-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PRICE-CONTACT-LETTER-DELETE-BY-ID*/ from price_contact_letter where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPriceContactLetterDAO.findByCondition -->
    <select id="MS-PRICE-CONTACT-LETTER-FIND-BY-CONDITION" resultMap="RM-PRICE-CONTACT-LETTER">
        SELECT /*MS-YRD-PRICE-CONTACT-LETTER-FIND-BY-CONDITION*/  id ,price_type ,price_template ,catalog_id ,catalog_name ,business_condition_id ,business_conditions ,business_user_id ,business_user_name ,project_setup_id ,project_setup_name ,name ,bill_no ,customer_type ,customer_user_id ,customer_user_name ,customer_cert_type ,customer_cert_no ,creator_id ,creator_name ,form_id ,status ,raw_add_time ,raw_update_time ,special_req ,ask_date ,version ,ext  FROM price_contact_letter WHERE 1=1

              <dynamic>
				<isNotEmpty property="priceContactLetter.status" prepend=" and ">
					status=#priceContactLetter.status#
				</isNotEmpty>

			</dynamic>

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisPriceContactLetterDAO.findByConditionCount -->
    <select id="MS-PRICE-CONTACT-LETTER-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PRICE-CONTACT-LETTER-FIND-BY-CONDITION-COUNT*/  count(*) FROM price_contact_letter  where 1=1
	           <dynamic>
				<isNotEmpty property="status" prepend=" and ">
					status=#status#
				</isNotEmpty>

			</dynamic>
    </select>

</sqlMap>
