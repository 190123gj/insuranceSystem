<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table insurance_protocol -->
    <resultMap id="RM-INSURANCE-PROTOCOL" class="com.born.insurance.dal.dataobject.InsuranceProtocolDO">
        <result property="protocolId" column="protocol_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="no" column="no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="protocolUserId" column="protocol_user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="protocolUserName" column="protocol_user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contractingAgencyId" column="contracting_agency_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contractingAgencyName" column="contracting_agency_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="beginDate" column="beginDate" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="endDate" column="endDate" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isMain" column="is_main" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="parentName" column="parent_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="formId" column="form_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="creatorId" column="creator_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="creatorName" column="creator_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="signDate" column="sign_date" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisInsuranceProtocolDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisInsuranceProtocolDAO.insert -->
    <insert id="MS-INSURANCE-PROTOCOL-INSERT">
        INSERT /*MS-YRD-INSURANCE-PROTOCOL-INSERT*/ INTO insurance_protocol(protocol_id,name,no,protocol_user_id,protocol_user_name,contracting_agency_id,contracting_agency_name,beginDate,endDate,remark,type,is_main,parent_id,parent_name,status,form_id,creator_id,creator_name,sign_date,raw_add_time) VALUES (#protocolId#,#name#,#no#,#protocolUserId#,#protocolUserName#,#contractingAgencyId#,#contractingAgencyName#,#beginDate#,#endDate#,#remark#,#type#,#isMain#,#parentId#,#parentName#,#status#,#formId#,#creatorId#,#creatorName#,#signDate#,#rawAddTime#)
		        <selectKey  resultClass ="long"  keyProperty ="protocolId" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisInsuranceProtocolDAO.update -->
    <update id="MS-INSURANCE-PROTOCOL-UPDATE">
    <![CDATA[
        update /*MS-YRD-INSURANCE-PROTOCOL-UPDATE*/ insurance_protocol set name=#name#, no=#no#, protocol_user_id=#protocolUserId#, protocol_user_name=#protocolUserName#, contracting_agency_id=#contractingAgencyId#, contracting_agency_name=#contractingAgencyName#, beginDate=#beginDate#, endDate=#endDate#, remark=#remark#, type=#type#, is_main=#isMain#, parent_id=#parentId#, parent_name=#parentName#, status=#status#, form_id=#formId#, creator_id=#creatorId#, creator_name=#creatorName#, sign_date=#signDate# where (protocol_id = #protocolId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisInsuranceProtocolDAO.findById -->
    <select id="MS-INSURANCE-PROTOCOL-FIND-BY-ID" resultMap="RM-INSURANCE-PROTOCOL">
    <![CDATA[
        select /*MS-YRD-INSURANCE-PROTOCOL-FIND-BY-ID*/ protocol_id, name, no, protocol_user_id, protocol_user_name, contracting_agency_id, contracting_agency_name, beginDate, endDate, remark, type, is_main, parent_id, parent_name, status, form_id, creator_id, creator_name, sign_date, raw_add_time, raw_update_time from insurance_protocol where (protocol_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisInsuranceProtocolDAO.deleteById -->
    <delete id="MS-INSURANCE-PROTOCOL-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-INSURANCE-PROTOCOL-DELETE-BY-ID*/ from insurance_protocol where (protocol_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisInsuranceProtocolDAO.findByCondition -->
    <select id="MS-INSURANCE-PROTOCOL-FIND-BY-CONDITION" resultMap="RM-INSURANCE-PROTOCOL">
        SELECT /*MS-YRD-INSURANCE-PROTOCOL-FIND-BY-CONDITION*/  protocol_id ,name ,no ,protocol_user_id ,protocol_user_name ,contracting_agency_id ,contracting_agency_name ,beginDate ,endDate ,remark ,type ,is_main ,parent_id ,parent_name ,status ,form_id ,creator_id ,creator_name ,sign_date ,raw_add_time ,raw_update_time  FROM insurance_protocol WHERE 1=1
              <dynamic>
				<isNotEmpty property="insuranceProtocol.type" prepend=" and ">
					type=#insuranceProtocol.type#
				</isNotEmpty>

                 <isGreaterThan property="insuranceProtocol.protocolUserId"  compareValue="0" prepend=" and ">
	                protocol_user_id = #insuranceProtocol.protocolUserId#
	            </isGreaterThan>

	            <isNotEmpty property="insuranceProtocol.name"  prepend=" and ">
	                name like concat('%', #insuranceProtocol.name#, '%')
	            </isNotEmpty>

	            <isNotEmpty property="insuranceProtocol.protocolUserName"   prepend=" and ">
	                  protocol_user_name like concat('%', #insuranceProtocol.protocolUserName#, '%')
	            </isNotEmpty>

				  <isNotEmpty property="currentDate" prepend=" and ">
		              <![CDATA[   beginDate <= #currentDate# and  endDate >= #currentDate#  ]]>
		          </isNotEmpty>

			</dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
	         <isEmpty property="sortCol" prepend=" order by ">
	             raw_add_time desc
	         </isEmpty>


            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisInsuranceProtocolDAO.findByConditionCount -->
    <select id="MS-INSURANCE-PROTOCOL-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-INSURANCE-PROTOCOL-FIND-BY-CONDITION-COUNT*/  count(*) FROM insurance_protocol  where 1=1
	           <dynamic>
	           	<isNotEmpty property="insuranceProtocol.type" prepend=" and ">
					type=#insuranceProtocol.type#
				</isNotEmpty>
				 <isNotEmpty property="currentDate" prepend=" and ">
		              <![CDATA[   beginDate <= #currentDate# and  endDate >= #currentDate#  ]]>
		          </isNotEmpty>

                 <isNotEmpty property="insuranceProtocol.name"  prepend=" and ">
	                name like concat('%', #insuranceProtocol.name#, '%')
	            </isNotEmpty>

	            <isNotEmpty property="insuranceProtocol.protocolUserName"   prepend=" and ">
	                  protocol_user_name like concat('%', #insuranceProtocol.protocolUserName#, '%')
	            </isNotEmpty>

		          <isGreaterThan property="insuranceProtocol.protocolUserId"  compareValue="0" prepend=" and ">
	                protocol_user_id = #insuranceProtocol.protocolUserId#
	            </isGreaterThan>
		        </dynamic>
    </select>

</sqlMap>
