<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table customer_relation -->
    <resultMap id="RM-CUSTOMER-RELATION" class="com.born.insurance.dal.dataobject.CustomerRelationDO">
        <result property="relationId" column="relation_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="parentName" column="parent_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="childName" column="child_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="childId" column="child_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="memberNo" column="member_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="typeId" column="type_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="typeName" column="type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCustomerRelationDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCustomerRelationDAO.insert -->
    <insert id="MS-CUSTOMER-RELATION-INSERT">
        INSERT /*MS-YRD-CUSTOMER-RELATION-INSERT*/ INTO customer_relation(relation_id,parent_name,parent_id,child_name,child_id,member_no,type_id,type_name,raw_add_time) VALUES (#relationId#,#parentName#,#parentId#,#childName#,#childId#,#memberNo#,#typeId#,#typeName#,#rawAddTime#)
		        <selectKey  resultClass ="long"  keyProperty ="relationId" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisCustomerRelationDAO.update -->
    <update id="MS-CUSTOMER-RELATION-UPDATE">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-RELATION-UPDATE*/ customer_relation set parent_name=#parentName#, parent_id=#parentId#, child_name=#childName#, child_id=#childId#, member_no=#memberNo#, type_id=#typeId#, type_name=#typeName# where (relation_id = #relationId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerRelationDAO.findById -->
    <select id="MS-CUSTOMER-RELATION-FIND-BY-ID" resultMap="RM-CUSTOMER-RELATION">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-RELATION-FIND-BY-ID*/ relation_id, parent_name, parent_id, child_name, child_id, member_no, type_id, type_name, raw_add_time, raw_update_time from customer_relation where (relation_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerRelationDAO.deleteById -->
    <delete id="MS-CUSTOMER-RELATION-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-RELATION-DELETE-BY-ID*/ from customer_relation where (relation_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerRelationDAO.deleteByChildId -->
    <delete id="MS-CUSTOMER-RELATION-DELETE-BY-CHILD-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-RELATION-DELETE-BY-CHILD-ID*/ from customer_relation where (child_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerRelationDAO.findByCondition -->
    <select id="MS-CUSTOMER-RELATION-FIND-BY-CONDITION" resultMap="RM-CUSTOMER-RELATION">
        SELECT /*MS-YRD-CUSTOMER-RELATION-FIND-BY-CONDITION*/  relation_id ,parent_name ,parent_id ,child_name ,child_id ,member_no ,type_id ,type_name ,raw_add_time ,raw_update_time  FROM customer_relation where 1=1
             <dynamic>
	            <isNotEmpty property="customerRelation.childId"  prepend=" and ">
	                child_id = #customerRelation.childId#
	            </isNotEmpty>
	        </dynamic>

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
             <isGreaterThan property="pageSize" compareValue="0"  prepend=" ">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisCustomerRelationDAO.findByConditionCount -->
    <select id="MS-CUSTOMER-RELATION-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-RELATION-FIND-BY-CONDITION-COUNT*/  count(*) FROM customer_relation  where 1=1
	          <dynamic>
	            <isNotEmpty property="childId"  prepend=" and ">
	                child_id = #childId#
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
