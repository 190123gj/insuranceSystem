<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table business_bill_customer -->
    <resultMap id="RM-BUSINESS-BILL-CUSTOMER" class="com.born.insurance.dal.dataobject.BusinessBillCustomerDO">
        <result property="billCustomerId" column="bill_customer_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerUserId" column="customer_user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerUserName" column="customer_user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerCertType" column="customer_cert_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerCertNo" column="customer_cert_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="relation" column="relation" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessBillId" column="business_bill_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="billNo" column="bill_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisBusinessBillCustomerDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisBusinessBillCustomerDAO.insert -->
    <insert id="MS-BUSINESS-BILL-CUSTOMER-INSERT">
        INSERT /*MS-YRD-BUSINESS-BILL-CUSTOMER-INSERT*/ INTO business_bill_customer(bill_customer_id,customer_user_id,customer_user_name,customer_cert_type,customer_cert_no,relation,type,business_bill_id,bill_no) VALUES (#billCustomerId#,#customerUserId#,#customerUserName#,#customerCertType#,#customerCertNo#,#relation#,#type#,#businessBillId#,#billNo#)
		        <selectKey  resultClass ="long"  keyProperty ="billCustomerId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisBusinessBillCustomerDAO.update -->
    <update id="MS-BUSINESS-BILL-CUSTOMER-UPDATE">
    <![CDATA[
        update /*MS-YRD-BUSINESS-BILL-CUSTOMER-UPDATE*/ business_bill_customer set customer_user_id=#customerUserId#, customer_user_name=#customerUserName#, customer_cert_type=#customerCertType#, customer_cert_no=#customerCertNo#, relation=#relation#, type=#type#, business_bill_id=#businessBillId# where (bill_customer_id = #billCustomerId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBusinessBillCustomerDAO.findById -->
    <select id="MS-BUSINESS-BILL-CUSTOMER-FIND-BY-ID" resultMap="RM-BUSINESS-BILL-CUSTOMER">
    <![CDATA[
        select /*MS-YRD-BUSINESS-BILL-CUSTOMER-FIND-BY-ID*/ bill_customer_id, customer_user_id, customer_user_name, customer_cert_type, customer_cert_no, relation, type, business_bill_id, bill_no from business_bill_customer where (bill_customer_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisBusinessBillCustomerDAO.deleteById -->
    <delete id="MS-BUSINESS-BILL-CUSTOMER-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-BUSINESS-BILL-CUSTOMER-DELETE-BY-ID*/ from business_bill_customer where (bill_customer_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisBusinessBillCustomerDAO.findByCondition -->
    <select id="MS-BUSINESS-BILL-CUSTOMER-FIND-BY-CONDITION" resultMap="RM-BUSINESS-BILL-CUSTOMER">
        SELECT /*MS-YRD-BUSINESS-BILL-CUSTOMER-FIND-BY-CONDITION*/  bill_customer_id ,customer_user_id ,customer_user_name ,customer_cert_type ,customer_cert_no ,relation ,type ,business_bill_id  FROM business_bill_customer where 1=1

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisBusinessBillCustomerDAO.findByConditionCount -->
    <select id="MS-BUSINESS-BILL-CUSTOMER-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-BUSINESS-BILL-CUSTOMER-FIND-BY-CONDITION-COUNT*/  count(*) FROM business_bill_customer  where 1=1
    </select>

    <!-- mapped statement for IbatisBusinessBillCustomerDAO.findBusinessBillCustomers -->
    <select id="MS-BUSINESS-BILL-CUSTOMER-FIND-BUSINESS-BILL-CUSTOMERS" resultMap="RM-BUSINESS-BILL-CUSTOMER">
    <![CDATA[
        select /*MS-YRD-BUSINESS-BILL-CUSTOMER-FIND-BUSINESS-BILL-CUSTOMERS*/ bill_customer_id, customer_user_id, customer_user_name, customer_cert_type, customer_cert_no, relation, type, business_bill_id, bill_no from business_bill_customer where (bill_no = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisBusinessBillCustomerDAO.findBillCustomerInfo -->
    <select id="MS-BUSINESS-BILL-CUSTOMER-FIND-BILL-CUSTOMER-INFO" resultMap="RM-BUSINESS-BILL-CUSTOMER">
    <![CDATA[
        select /*MS-YRD-BUSINESS-BILL-CUSTOMER-FIND-BILL-CUSTOMER-INFO*/ bill_customer_id, customer_user_id, customer_user_name, customer_cert_type, customer_cert_no, relation, type, business_bill_id, bill_no from business_bill_customer where ((business_bill_id = #businessBillId#) AND (type = #type#))
    ]]>
    </select>

</sqlMap>
