<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table brokerage_fee -->
    <resultMap id="RM-BROKERAGE-FEE" class="com.born.insurance.dal.dataobject.BrokerageFeeDO">
        <result property="brokerageId" column="brokerage_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="businessBillId" column="business_bill_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="brokerageScale" column="brokerage_scale" javaType="double" jdbcType="DECIMAL" nullValue="0"/>
        <result property="brokerageAmount" column="brokerage_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="updateAddTime" column="update_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisBrokerageFeeDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisBrokerageFeeDAO.insert -->
    <insert id="MS-BROKERAGE-FEE-INSERT">
        INSERT /*MS-YRD-BROKERAGE-FEE-INSERT*/ INTO brokerage_fee(brokerage_id,business_bill_id,brokerage_scale,brokerage_amount,raw_add_time,update_add_time) VALUES (#brokerageId#,#businessBillId#,#brokerageScale#,#brokerageAmount#,#rawAddTime#,#updateAddTime#)
		        <selectKey  resultClass ="long"  keyProperty ="brokerageId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisBrokerageFeeDAO.update -->
    <update id="MS-BROKERAGE-FEE-UPDATE">
    <![CDATA[
        update /*MS-YRD-BROKERAGE-FEE-UPDATE*/ brokerage_fee set business_bill_id=#businessBillId#, brokerage_scale=#brokerageScale#, brokerage_amount=#brokerageAmount.cent#, update_add_time=#updateAddTime# where (brokerage_id = #brokerageId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisBrokerageFeeDAO.findById -->
    <select id="MS-BROKERAGE-FEE-FIND-BY-ID" resultMap="RM-BROKERAGE-FEE">
    <![CDATA[
        select /*MS-YRD-BROKERAGE-FEE-FIND-BY-ID*/ brokerage_id, business_bill_id, brokerage_scale, brokerage_amount, raw_add_time, update_add_time from brokerage_fee where (brokerage_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisBrokerageFeeDAO.deleteById -->
    <delete id="MS-BROKERAGE-FEE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-BROKERAGE-FEE-DELETE-BY-ID*/ from brokerage_fee where (brokerage_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisBrokerageFeeDAO.findByCondition -->
    <select id="MS-BROKERAGE-FEE-FIND-BY-CONDITION" resultMap="RM-BROKERAGE-FEE">
        SELECT /*MS-YRD-BROKERAGE-FEE-FIND-BY-CONDITION*/  brokerage_id ,business_bill_id ,brokerage_scale ,brokerage_amount ,raw_add_time ,update_add_time  FROM brokerage_fee where 1=1

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisBrokerageFeeDAO.findByConditionCount -->
    <select id="MS-BROKERAGE-FEE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-BROKERAGE-FEE-FIND-BY-CONDITION-COUNT*/  count(*) FROM brokerage_fee  where 1=1
    </select>

    <!-- mapped statement for IbatisBrokerageFeeDAO.findBrokerageFeeByBusinessBillId -->
    <select id="MS-BROKERAGE-FEE-FIND-BROKERAGE-FEE-BY-BUSINESS-BILL-ID" resultMap="RM-BROKERAGE-FEE">
    <![CDATA[
        select /*MS-YRD-BROKERAGE-FEE-FIND-BROKERAGE-FEE-BY-BUSINESS-BILL-ID*/ brokerage_id, business_bill_id, brokerage_scale, brokerage_amount, raw_add_time, update_add_time from brokerage_fee where (business_bill_id = #value#)
    ]]>
    </select>

</sqlMap>
