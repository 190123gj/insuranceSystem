<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table price_contact_letter_company_report_price -->
    <resultMap id="RM-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE" class="com.born.insurance.dal.dataobject.PriceContactLetterCompanyReportPriceDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerUserId" column="customer_user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="customerUserName" column="customer_user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="reportPriceId" column="report_price_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="premiumAmount" column="premium_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="brokerAmount" column="broker_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="brokerAmountRate" column="broker_amount_rate" javaType="double" jdbcType="DECIMAL" nullValue="0"/>
        <result property="createDate" column="create_date" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="expenseAmount" column="expense_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="differenceContent" column="difference_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="specialAgreement" column="special_agreement" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="quotationPrerequisite" column="quotation_prerequisite" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="expiryDate" column="expiry_date" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contactUserId" column="contactUserId" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="contactUserName" column="contactUserName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contactUserMobile" column="contactUserMobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contactUserEmail" column="contactUserEmail" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="version" column="version" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ext" column="ext" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPriceContactLetterCompanyReportPriceDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPriceContactLetterCompanyReportPriceDAO.insert -->
    <insert id="MS-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-INSERT">
        INSERT /*MS-YRD-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-INSERT*/ INTO price_contact_letter_company_report_price(id,customer_user_id,customer_user_name,report_price_id,premium_amount,broker_amount,broker_amount_rate,create_date,expense_amount,difference_content,special_agreement,quotation_prerequisite,expiry_date,contactUserId,contactUserName,contactUserMobile,contactUserEmail,remark,version,ext) VALUES (#id#,#customerUserId#,#customerUserName#,#reportPriceId#,#premiumAmount#,#brokerAmount#,#brokerAmountRate#,#createDate#,#expenseAmount#,#differenceContent#,#specialAgreement#,#quotationPrerequisite#,#expiryDate#,#contactUserId#,#contactUserName#,#contactUserMobile#,#contactUserEmail#,#remark#,#version#,#ext#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisPriceContactLetterCompanyReportPriceDAO.update -->
    <update id="MS-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-UPDATE">
    <![CDATA[
        update /*MS-YRD-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-UPDATE*/ price_contact_letter_company_report_price set customer_user_id=#customerUserId#, customer_user_name=#customerUserName#, report_price_id=#reportPriceId#, premium_amount=#premiumAmount.cent#, broker_amount=#brokerAmount.cent#, broker_amount_rate=#brokerAmountRate#, create_date=#createDate#, expense_amount=#expenseAmount.cent#, difference_content=#differenceContent#, special_agreement=#specialAgreement#, quotation_prerequisite=#quotationPrerequisite#, expiry_date=#expiryDate#, contactUserId=#contactUserId#, contactUserName=#contactUserName#, contactUserMobile=#contactUserMobile#, contactUserEmail=#contactUserEmail#, remark=#remark#, version=#version#, ext=#ext# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPriceContactLetterCompanyReportPriceDAO.findById -->
    <select id="MS-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-FIND-BY-ID" resultMap="RM-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE">
    <![CDATA[
        select /*MS-YRD-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-FIND-BY-ID*/ id, customer_user_id, customer_user_name, report_price_id, premium_amount, broker_amount, broker_amount_rate, create_date, expense_amount, difference_content, special_agreement, quotation_prerequisite, expiry_date, contactUserId, contactUserName, contactUserMobile, contactUserEmail, remark, version, ext from price_contact_letter_company_report_price where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPriceContactLetterCompanyReportPriceDAO.deleteById -->
    <delete id="MS-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-DELETE-BY-ID*/ from price_contact_letter_company_report_price where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPriceContactLetterCompanyReportPriceDAO.findByCondition -->
    <select id="MS-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-FIND-BY-CONDITION" resultMap="RM-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE">
        SELECT /*MS-YRD-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-FIND-BY-CONDITION*/  *  FROM price_contact_letter_company_report_price where 1=1
            <dynamic>
                  <isGreaterThan property="priceContactLetterCompanyReportPrice.reportPriceId"  compareValue="0" prepend=" and ">
	                report_price_id = #priceContactLetterCompanyReportPrice.reportPriceId#
	            </isGreaterThan>

	            <isGreaterThan property="priceContactLetterCompanyReportPrice.customerUserId"  compareValue="0" prepend=" and ">
	                customer_user_id = #priceContactLetterCompanyReportPrice.customerUserId#
	            </isGreaterThan>

			</dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisPriceContactLetterCompanyReportPriceDAO.findByConditionCount -->
    <select id="MS-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PRICE-CONTACT-LETTER-COMPANY-REPORT-PRICE-FIND-BY-CONDITION-COUNT*/  count(*) FROM price_contact_letter_company_report_price  where 1=1
	          <dynamic>
                  <isGreaterThan property="reportPriceId"  compareValue="0" prepend=" and ">
	                report_price_id = #reportPriceId#
	            </isGreaterThan>

	            <isGreaterThan property="customerUserId"  compareValue="0" prepend=" and ">
	                customer_user_id = #customerUserId#
	            </isGreaterThan>
			</dynamic>
    </select>

</sqlMap>
