<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table customer_relation_apply -->
    <resultMap id="RM-CUSTOMER-RELATION-APPLY" class="com.born.insurance.dal.dataobject.CustomerRelationApplyDO">
        <result property="applyRelationId" column="apply_relation_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="parentId" column="parent_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="childId" column="child_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="creatorId" column="creator_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="creatorName" column="creator_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCustomerRelationApplyDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCustomerRelationApplyDAO.insert -->
    <insert id="MS-CUSTOMER-RELATION-APPLY-INSERT">
        INSERT /*MS-YRD-CUSTOMER-RELATION-APPLY-INSERT*/ INTO customer_relation_apply(apply_relation_id,parent_id,child_id,status,raw_add_time,remark,creator_id,creator_name) VALUES (#applyRelationId#,#parentId#,#childId#,#status#,#rawAddTime#,#remark#,#creatorId#,#creatorName#)
		        <selectKey  resultClass ="long"  keyProperty ="applyRelationId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisCustomerRelationApplyDAO.update -->
    <update id="MS-CUSTOMER-RELATION-APPLY-UPDATE">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-RELATION-APPLY-UPDATE*/ customer_relation_apply set parent_id=#parentId#, child_id=#childId#, status=#status#, remark=#remark#, creator_id=#creatorId#, creator_name=#creatorName# where (apply_relation_id = #applyRelationId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerRelationApplyDAO.findById -->
    <select id="MS-CUSTOMER-RELATION-APPLY-FIND-BY-ID" resultMap="RM-CUSTOMER-RELATION-APPLY">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-RELATION-APPLY-FIND-BY-ID*/ apply_relation_id, parent_id, child_id, status, raw_add_time, raw_update_time, remark, creator_id, creator_name from customer_relation_apply where (apply_relation_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerRelationApplyDAO.deleteById -->
    <delete id="MS-CUSTOMER-RELATION-APPLY-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-RELATION-APPLY-DELETE-BY-ID*/ from customer_relation_apply where (apply_relation_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerRelationApplyDAO.findByCondition -->
    <select id="MS-CUSTOMER-RELATION-APPLY-FIND-BY-CONDITION" resultMap="RM-CUSTOMER-RELATION-APPLY">
        SELECT /*MS-YRD-CUSTOMER-RELATION-APPLY-FIND-BY-CONDITION*/  apply_relation_id ,parent_id ,child_id ,status ,raw_add_time ,raw_update_time ,remark ,creator_id ,creator_name  FROM customer_relation_apply where 1=1

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisCustomerRelationApplyDAO.findByConditionCount -->
    <select id="MS-CUSTOMER-RELATION-APPLY-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-RELATION-APPLY-FIND-BY-CONDITION-COUNT*/  count(*) FROM customer_relation_apply  where 1=1
    </select>

</sqlMap>
