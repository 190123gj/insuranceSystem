<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table customer_bank_info -->
    <resultMap id="RM-CUSTOMER-BANK-INFO" class="com.born.insurance.dal.dataobject.CustomerBankInfoDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="bankCardName" column="bank_card_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankCardNo" column="bank_card_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="openBankName" column="open_bank_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankType" column="bank_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankProvince" column="bank_province" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankCity" column="bank_city" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isDefault" column="is_default" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankOrder" column="bank_order" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="isDel" column="is_del" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCustomerBankInfoDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCustomerBankInfoDAO.insert -->
    <insert id="MS-CUSTOMER-BANK-INFO-INSERT">
        INSERT /*MS-YRD-CUSTOMER-BANK-INFO-INSERT*/ INTO customer_bank_info(id,user_id,bank_card_name,bank_card_no,open_bank_name,bank_type,bank_province,bank_city,is_default,bank_order,remark,raw_add_time,is_del) VALUES (#id#,#userId#,#bankCardName#,#bankCardNo#,#openBankName#,#bankType#,#bankProvince#,#bankCity#,#isDefault#,#bankOrder#,#remark#,#rawAddTime#,#isDel#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisCustomerBankInfoDAO.update -->
    <update id="MS-CUSTOMER-BANK-INFO-UPDATE">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-BANK-INFO-UPDATE*/ customer_bank_info set user_id=#userId#, bank_card_name=#bankCardName#, bank_card_no=#bankCardNo#, open_bank_name=#openBankName#, bank_type=#bankType#, bank_province=#bankProvince#, bank_city=#bankCity#, is_default=#isDefault#, bank_order=#bankOrder#, remark=#remark#, is_del=#isDel# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerBankInfoDAO.findById -->
    <select id="MS-CUSTOMER-BANK-INFO-FIND-BY-ID" resultMap="RM-CUSTOMER-BANK-INFO">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-BANK-INFO-FIND-BY-ID*/ id, user_id, bank_card_name, bank_card_no, open_bank_name, bank_type, bank_province, bank_city, is_default, bank_order, remark, raw_add_time, raw_update_time, is_del from customer_bank_info where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerBankInfoDAO.deleteById -->
    <delete id="MS-CUSTOMER-BANK-INFO-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-BANK-INFO-DELETE-BY-ID*/ from customer_bank_info where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerBankInfoDAO.deleteByUserId -->
    <delete id="MS-CUSTOMER-BANK-INFO-DELETE-BY-USER-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-BANK-INFO-DELETE-BY-USER-ID*/ from customer_bank_info where (user_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerBankInfoDAO.findByCondition -->
    <select id="MS-CUSTOMER-BANK-INFO-FIND-BY-CONDITION" resultMap="RM-CUSTOMER-BANK-INFO">
        SELECT /*MS-YRD-CUSTOMER-BANK-INFO-FIND-BY-CONDITION*/  id ,user_id ,bank_card_name ,bank_card_no ,open_bank_name ,bank_type ,bank_province ,bank_city ,is_default ,bank_order ,remark ,raw_add_time ,raw_update_time ,is_del  FROM customer_bank_info  where 1=1

             <dynamic>
	           <isGreaterThan property="customerBankInfo.userId" compareValue="0"  prepend=" and ">
				    user_id = #customerBankInfo.userId#
			   </isGreaterThan>
	        </dynamic>

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
              <isGreaterThan property="pageSize" compareValue="0"  prepend=" ">
				LIMIT #limitStart#,#pageSize#
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisCustomerBankInfoDAO.findByConditionCount -->
    <select id="MS-CUSTOMER-BANK-INFO-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-BANK-INFO-FIND-BY-CONDITION-COUNT*/  count(*) FROM customer_bank_info  where 1=1
	           <dynamic>
	           <isGreaterThan property="customerBankInfo.userId" compareValue="0"  prepend=" and ">
				    user_id = #customerBankInfo.userId#
			   </isGreaterThan>
	        </dynamic>
    </select>

</sqlMap>
