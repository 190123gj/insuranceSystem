<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table customer_person_detail -->
    <resultMap id="RM-CUSTOMER-PERSON-DETAIL" class="com.born.insurance.dal.dataobject.CustomerPersonDetailDO">
        <result property="customerId" column="customer_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerName" column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="orgId" column="org_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="nation" column="nation" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="birthDay" column="birthDay" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="maritalStatus" column="marital_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="company" column="company" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="dept" column="dept" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="job" column="job" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCustomerPersonDetailDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCustomerPersonDetailDAO.insert -->
    <insert id="MS-CUSTOMER-PERSON-DETAIL-INSERT">
        INSERT /*MS-YRD-CUSTOMER-PERSON-DETAIL-INSERT*/ INTO customer_person_detail(customer_id,sex,customer_name,org_id,nation,birthDay,marital_status,company,dept,job) VALUES (#customerId#,#sex#,#customerName#,#orgId#,#nation#,#birthDay#,#maritalStatus#,#company#,#dept#,#job#)
    </insert>

    <!-- mapped statement for IbatisCustomerPersonDetailDAO.update -->
    <update id="MS-CUSTOMER-PERSON-DETAIL-UPDATE">
    <![CDATA[
        update /*MS-YRD-CUSTOMER-PERSON-DETAIL-UPDATE*/ customer_person_detail set sex=#sex#, customer_name=#customerName#, org_id=#orgId#, nation=#nation#, birthDay=#birthDay#, marital_status=#maritalStatus#, company=#company#, dept=#dept#, job=#job# where (customer_id = #customerId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisCustomerPersonDetailDAO.findById -->
    <select id="MS-CUSTOMER-PERSON-DETAIL-FIND-BY-ID" resultMap="RM-CUSTOMER-PERSON-DETAIL">
    <![CDATA[
        select /*MS-YRD-CUSTOMER-PERSON-DETAIL-FIND-BY-ID*/ customer_id, sex, customer_name, org_id, nation, birthDay, marital_status, company, dept, job from customer_person_detail where (customer_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisCustomerPersonDetailDAO.deleteById -->
    <delete id="MS-CUSTOMER-PERSON-DETAIL-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-CUSTOMER-PERSON-DETAIL-DELETE-BY-ID*/ from customer_person_detail where (customer_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisCustomerPersonDetailDAO.findByCondition -->
    <select id="MS-CUSTOMER-PERSON-DETAIL-FIND-BY-CONDITION" resultMap="RM-CUSTOMER-PERSON-DETAIL">
        SELECT /*MS-YRD-CUSTOMER-PERSON-DETAIL-FIND-BY-CONDITION*/  customer_id ,sex,customer_name ,org_id ,nation ,birthDay ,marital_status ,company ,dept ,job  FROM customer_person_detail where 1=1

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisCustomerPersonDetailDAO.findByConditionCount -->
    <select id="MS-CUSTOMER-PERSON-DETAIL-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-CUSTOMER-PERSON-DETAIL-FIND-BY-CONDITION-COUNT*/  count(*) FROM customer_person_detail  where 1=1
    </select>

</sqlMap>
