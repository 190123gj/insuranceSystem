<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table message_template -->
    <resultMap id="RM-MESSAGE-TEMPLATE" class="com.born.insurance.dal.dataobject.MessageTemplateDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="notifyName" column="notify_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="notifyType" column="notify_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="endDay" column="end_day" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="notifyContent" column="notify_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="creatorId" column="creator_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="creatorName" column="creator_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisMessageTemplateDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisMessageTemplateDAO.insert -->
    <insert id="MS-MESSAGE-TEMPLATE-INSERT">
        INSERT /*MS-YRD-MESSAGE-TEMPLATE-INSERT*/ INTO message_template(id,notify_name,notify_type,end_day,notify_content,creator_id,creator_name,type,raw_add_time) VALUES (#id#,#notifyName#,#notifyType#,#endDay#,#notifyContent#,#creatorId#,#creatorName#,#type#,#rawAddTime#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisMessageTemplateDAO.update -->
    <update id="MS-MESSAGE-TEMPLATE-UPDATE">
    <![CDATA[
        update /*MS-YRD-MESSAGE-TEMPLATE-UPDATE*/ message_template set notify_name=#notifyName#, notify_type=#notifyType#, end_day=#endDay#, notify_content=#notifyContent#, creator_id=#creatorId#, creator_name=#creatorName#, type=#type# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisMessageTemplateDAO.findById -->
    <select id="MS-MESSAGE-TEMPLATE-FIND-BY-ID" resultMap="RM-MESSAGE-TEMPLATE">
    <![CDATA[
        select /*MS-YRD-MESSAGE-TEMPLATE-FIND-BY-ID*/ id, notify_name, notify_type, end_day, notify_content, creator_id, creator_name, type, raw_add_time, raw_update_time from message_template where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisMessageTemplateDAO.deleteById -->
    <delete id="MS-MESSAGE-TEMPLATE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-MESSAGE-TEMPLATE-DELETE-BY-ID*/ from message_template where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisMessageTemplateDAO.findByCondition -->
    <select id="MS-MESSAGE-TEMPLATE-FIND-BY-CONDITION" resultMap="RM-MESSAGE-TEMPLATE">
        SELECT /*MS-YRD-MESSAGE-TEMPLATE-FIND-BY-CONDITION*/  id ,notify_name ,notify_type ,end_day ,notify_content ,creator_id ,creator_name ,type ,raw_add_time ,raw_update_time  FROM message_template where 1=1
			  <dynamic>
			  	<isNotEmpty property="messageTemplate.notifyName" prepend=" and ">
					notify_name=#messageTemplate.notifyName#
				</isNotEmpty>
				<isNotEmpty property="messageTemplate.notifyType" prepend=" and ">
					notify_type=#messageTemplate.notifyType#
				</isNotEmpty>
				<isNotEmpty property="startTime" prepend=" and ">
				    <![CDATA[  raw_add_time >= #startTime#   ]]>
				</isNotEmpty>
				<isNotEmpty property="endTime" prepend=" and ">
				 <![CDATA[  raw_add_time <= #endTime#   ]]>
				</isNotEmpty>
			  </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
				$sortCol$
				<isNotEmpty property="sortOrder">
					$sortOrder$
				</isNotEmpty>
			</isNotEmpty>
			<isGreaterThan property="pageSize" compareValue="0"
				prepend="">
				LIMIT #limitStart#,#pageSize#;
			</isGreaterThan>
    </select>

    <!-- mapped statement for IbatisMessageTemplateDAO.findByConditionCount -->
    <select id="MS-MESSAGE-TEMPLATE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-MESSAGE-TEMPLATE-FIND-BY-CONDITION-COUNT*/  count(*) FROM message_template WHERE  1=1
	           <dynamic>
				<isNotEmpty property="notifyName" prepend=" and ">
					notify_name=#notifyName#
				</isNotEmpty>
				<isNotEmpty property="notifyType" prepend=" and ">
					notify_type=#notifyType#
				</isNotEmpty>
				<isNotEmpty property="startTime" prepend=" and ">
					<![CDATA[ raw_add_time >= #startTime# ]]>
				</isNotEmpty>
				<isNotEmpty property="endTime" prepend=" and ">
					<![CDATA[ raw_add_time <= #endTime# ]]>
				</isNotEmpty>
			</dynamic>
    </select>

</sqlMap>
