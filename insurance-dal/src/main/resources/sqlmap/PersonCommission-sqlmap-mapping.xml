<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table person_commission -->
    <resultMap id="RM-PERSON-COMMISSION" class="com.born.insurance.dal.dataobject.PersonCommissionDO">
        <result property="commissionId" column="commission_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="businessUserId" column="business_user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="businessUserName" column="business_user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessUserType" column="business_user_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessUserMobile" column="business_user_mobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessUserCertNo" column="business_user_cert_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="totalAmount" column="total_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="drawAmount" column="draw_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="applyingAmount" column="applying_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPersonCommissionDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPersonCommissionDAO.insert -->
    <insert id="MS-PERSON-COMMISSION-INSERT">
        INSERT /*MS-YRD-PERSON-COMMISSION-INSERT*/ INTO person_commission(commission_id,business_user_id,business_user_name,business_user_type,business_user_mobile,business_user_cert_no,total_amount,draw_amount,applying_amount,raw_add_time) VALUES (#commissionId#,#businessUserId#,#businessUserName#,#businessUserType#,#businessUserMobile#,#businessUserCertNo#,#totalAmount#,#drawAmount#,#applyingAmount#,#rawAddTime#)
		        <selectKey  resultClass ="long"  keyProperty ="commissionId" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisPersonCommissionDAO.update -->
    <update id="MS-PERSON-COMMISSION-UPDATE">
    <![CDATA[
        update /*MS-YRD-PERSON-COMMISSION-UPDATE*/ person_commission set business_user_id=#businessUserId#, business_user_name=#businessUserName#, business_user_type=#businessUserType#, business_user_mobile=#businessUserMobile#, business_user_cert_no=#businessUserCertNo#, total_amount=#totalAmount.cent#, draw_amount=#drawAmount.cent#, applying_amount=#applyingAmount.cent# where (commission_id = #commissionId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPersonCommissionDAO.findById -->
    <select id="MS-PERSON-COMMISSION-FIND-BY-ID" resultMap="RM-PERSON-COMMISSION">
    <![CDATA[
        select /*MS-YRD-PERSON-COMMISSION-FIND-BY-ID*/ commission_id, business_user_id, business_user_name, business_user_type, business_user_mobile, business_user_cert_no, total_amount, draw_amount, applying_amount, raw_add_time, raw_update_time from person_commission where (commission_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonCommissionDAO.deleteById -->
    <delete id="MS-PERSON-COMMISSION-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PERSON-COMMISSION-DELETE-BY-ID*/ from person_commission where (commission_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPersonCommissionDAO.findByCondition -->
    <select id="MS-PERSON-COMMISSION-FIND-BY-CONDITION" resultMap="RM-PERSON-COMMISSION">
        SELECT /*MS-YRD-PERSON-COMMISSION-FIND-BY-CONDITION*/  commission_id ,business_user_id ,business_user_name ,business_user_type ,business_user_mobile ,business_user_cert_no ,total_amount ,draw_amount ,applying_amount ,raw_add_time ,raw_update_time  FROM person_commission where 1=1
			<dynamic>
	            <isNotEmpty property="personCommission.businessUserName"   prepend=" and ">
	                business_user_name like concat('%', #personCommission.businessUserName#, '%')
	            </isNotEmpty>
				<isNotEmpty property="personCommission.businessUserMobile" prepend=" and ">
	                business_user_mobile like concat('%', #personCommission.businessUserMobile#, '%') 
	            </isNotEmpty>
	            <isNotEmpty property="personCommission.businessUserCertNo"  prepend=" and ">
	                business_user_cert_no like concat('%', #personCommission.businessUserCertNo#, '%') 
	            </isNotEmpty>
	            <isNotEmpty property="personCommission.businessUserType"  prepend=" and ">
	                business_user_type = #personCommission.businessUserType#
	            </isNotEmpty>
	        </dynamic>	
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisPersonCommissionDAO.findByConditionCount -->
    <select id="MS-PERSON-COMMISSION-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PERSON-COMMISSION-FIND-BY-CONDITION-COUNT*/  count(*) FROM person_commission  where 1=1
	           <dynamic>
	            <isNotEmpty property="businessUserName"   prepend=" and ">
	                business_user_name like concat('%', #businessUserName#, '%')
	            </isNotEmpty>
				<isNotEmpty property="businessUserMobile" prepend=" and ">
	                business_user_mobile like concat('%', #businessUserMobile#, '%') 
	            </isNotEmpty>
	            <isNotEmpty property="businessUserCertNo"  prepend=" and ">
	                business_user_cert_no like concat('%', #businessUserCertNo#, '%') 
	            </isNotEmpty>
	             <isNotEmpty property="businessUserType"  prepend=" and ">
	                business_user_type = #businessUserType#
	            </isNotEmpty>
	        </dynamic>
    </select>

    <!-- mapped statement for IbatisPersonCommissionDAO.findByUserId -->
    <select id="MS-PERSON-COMMISSION-FIND-BY-USER-ID" resultMap="RM-PERSON-COMMISSION">
    <![CDATA[
        select /*MS-YRD-PERSON-COMMISSION-FIND-BY-USER-ID*/ commission_id, business_user_id, business_user_name, business_user_type, business_user_mobile, business_user_cert_no, total_amount, draw_amount, applying_amount, raw_add_time, raw_update_time from person_commission where (business_user_id = #value#)
    ]]>
    </select>

</sqlMap>
