<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table insurance_product_level -->
    <resultMap id="RM-INSURANCE-PRODUCT-LEVEL" class="com.born.insurance.dal.dataobject.InsuranceProductLevelDO">
        <result property="levelId" column="level_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="level" column="level" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="coverageAmount" column="coverage_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="premiumAmount" column="premium_amount" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="productId" column="product_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisInsuranceProductLevelDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisInsuranceProductLevelDAO.insert -->
    <insert id="MS-INSURANCE-PRODUCT-LEVEL-INSERT">
        INSERT /*MS-YRD-INSURANCE-PRODUCT-LEVEL-INSERT*/ INTO insurance_product_level(level_id,level,coverage_amount,premium_amount,product_id) VALUES (#levelId#,#level#,#coverageAmount#,#premiumAmount#,#productId#)
		        <selectKey  resultClass ="long"  keyProperty ="levelId" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisInsuranceProductLevelDAO.update -->
    <update id="MS-INSURANCE-PRODUCT-LEVEL-UPDATE">
    <![CDATA[
        update /*MS-YRD-INSURANCE-PRODUCT-LEVEL-UPDATE*/ insurance_product_level set level=#level#, coverage_amount=#coverageAmount.cent#, premium_amount=#premiumAmount.cent#, product_id=#productId# where (level_id = #levelId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisInsuranceProductLevelDAO.findById -->
    <select id="MS-INSURANCE-PRODUCT-LEVEL-FIND-BY-ID" resultMap="RM-INSURANCE-PRODUCT-LEVEL">
    <![CDATA[
        select /*MS-YRD-INSURANCE-PRODUCT-LEVEL-FIND-BY-ID*/ level_id, level, coverage_amount, premium_amount, product_id from insurance_product_level where (level_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisInsuranceProductLevelDAO.deleteById -->
    <delete id="MS-INSURANCE-PRODUCT-LEVEL-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-INSURANCE-PRODUCT-LEVEL-DELETE-BY-ID*/ from insurance_product_level where (level_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisInsuranceProductLevelDAO.findByCondition -->
    <select id="MS-INSURANCE-PRODUCT-LEVEL-FIND-BY-CONDITION" resultMap="RM-INSURANCE-PRODUCT-LEVEL">
        SELECT /*MS-YRD-INSURANCE-PRODUCT-LEVEL-FIND-BY-CONDITION*/  level_id ,level ,coverage_amount ,premium_amount ,product_id  FROM insurance_product_level where 1=1

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisInsuranceProductLevelDAO.findByConditionCount -->
    <select id="MS-INSURANCE-PRODUCT-LEVEL-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-INSURANCE-PRODUCT-LEVEL-FIND-BY-CONDITION-COUNT*/  count(*) FROM insurance_product_level  where 1=1
    </select>

    <!-- mapped statement for IbatisInsuranceProductLevelDAO.queryList -->
    <select id="MS-INSURANCE-PRODUCT-LEVEL-QUERY-LIST" resultMap="RM-INSURANCE-PRODUCT-LEVEL">
    <![CDATA[
        select /*MS-YRD-INSURANCE-PRODUCT-LEVEL-QUERY-LIST*/ level_id, level, coverage_amount, premium_amount, product_id from insurance_product_level where (product_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisInsuranceProductLevelDAO.deleteByProductId -->
    <delete id="MS-INSURANCE-PRODUCT-LEVEL-DELETE-BY-PRODUCT-ID">
    <![CDATA[
        delete /*MS-YRD-INSURANCE-PRODUCT-LEVEL-DELETE-BY-PRODUCT-ID*/ from insurance_product_level where (product_id = #value#)
    ]]>
    </delete>

</sqlMap>
