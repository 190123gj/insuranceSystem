<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table price_contact_letter_ask_company -->
    <resultMap id="RM-PRICE-CONTACT-LETTER-ASK-COMPANY" class="com.born.insurance.dal.dataobject.PriceContactLetterAskCompanyDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="letterDemandId" column="letter_demand_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="companyUserId" column="companyUserId" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="companyUserName" column="companyUserName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="catalogId" column="catalogId" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="catalogName" column="catalogName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="intentionFee" column="intentionFee" javaType="double" jdbcType="DECIMAL" nullValue="0"/>
        <result property="protocolFee" column="protocolFee" javaType="double" jdbcType="DECIMAL" nullValue="0"/>
        <result property="contactUserId" column="contactUserId" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="contactUserName" column="contactUserName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contactUserMobile" column="contactUserMobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contactUserEmail" column="contactUserEmail" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="version" column="version" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ext" column="ext" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPriceContactLetterAskCompanyDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPriceContactLetterAskCompanyDAO.insert -->
    <insert id="MS-PRICE-CONTACT-LETTER-ASK-COMPANY-INSERT">
        INSERT /*MS-YRD-PRICE-CONTACT-LETTER-ASK-COMPANY-INSERT*/ INTO price_contact_letter_ask_company(id,letter_demand_id,companyUserId,companyUserName,catalogId,catalogName,intentionFee,protocolFee,contactUserId,contactUserName,contactUserMobile,contactUserEmail,version,ext) VALUES (#id#,#letterDemandId#,#companyUserId#,#companyUserName#,#catalogId#,#catalogName#,#intentionFee#,#protocolFee#,#contactUserId#,#contactUserName#,#contactUserMobile#,#contactUserEmail#,#version#,#ext#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >
		          		 SELECT LAST_INSERT_ID() AS ID
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisPriceContactLetterAskCompanyDAO.update -->
    <update id="MS-PRICE-CONTACT-LETTER-ASK-COMPANY-UPDATE">
    <![CDATA[
        update /*MS-YRD-PRICE-CONTACT-LETTER-ASK-COMPANY-UPDATE*/ price_contact_letter_ask_company set letter_demand_id=#letterDemandId#, companyUserId=#companyUserId#, companyUserName=#companyUserName#, catalogId=#catalogId#, catalogName=#catalogName#, intentionFee=#intentionFee#, protocolFee=#protocolFee#, contactUserId=#contactUserId#, contactUserName=#contactUserName#, contactUserMobile=#contactUserMobile#, contactUserEmail=#contactUserEmail#, version=#version#, ext=#ext# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPriceContactLetterAskCompanyDAO.findById -->
    <select id="MS-PRICE-CONTACT-LETTER-ASK-COMPANY-FIND-BY-ID" resultMap="RM-PRICE-CONTACT-LETTER-ASK-COMPANY">
    <![CDATA[
        select /*MS-YRD-PRICE-CONTACT-LETTER-ASK-COMPANY-FIND-BY-ID*/ id, letter_demand_id, companyUserId, companyUserName, catalogId, catalogName, intentionFee, protocolFee, contactUserId, contactUserName, contactUserMobile, contactUserEmail, version, ext from price_contact_letter_ask_company where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPriceContactLetterAskCompanyDAO.deleteById -->
    <delete id="MS-PRICE-CONTACT-LETTER-ASK-COMPANY-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-PRICE-CONTACT-LETTER-ASK-COMPANY-DELETE-BY-ID*/ from price_contact_letter_ask_company where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPriceContactLetterAskCompanyDAO.findByCondition -->
    <select id="MS-PRICE-CONTACT-LETTER-ASK-COMPANY-FIND-BY-CONDITION" resultMap="RM-PRICE-CONTACT-LETTER-ASK-COMPANY">
        SELECT /*MS-YRD-PRICE-CONTACT-LETTER-ASK-COMPANY-FIND-BY-CONDITION*/  id ,letter_demand_id ,companyUserId ,companyUserName ,catalogId ,catalogName ,intentionFee ,protocolFee ,contactUserId ,contactUserName ,contactUserMobile ,contactUserEmail ,version ,ext  FROM price_contact_letter_ask_company where 1=1

             <dynamic>
                  <isGreaterThan property="priceContactLetterAskCompany.letterDemandId"  compareValue="0" prepend=" and ">
	                letter_demand_id = #priceContactLetterAskCompany.letterDemandId#
	            </isGreaterThan>
			</dynamic>

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisPriceContactLetterAskCompanyDAO.findByConditionCount -->
    <select id="MS-PRICE-CONTACT-LETTER-ASK-COMPANY-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-PRICE-CONTACT-LETTER-ASK-COMPANY-FIND-BY-CONDITION-COUNT*/  count(*) FROM price_contact_letter_ask_company  where 1=1
	          <dynamic>
                  <isGreaterThan property="letterDemandId"  compareValue="0" prepend=" and ">
	                letter_demand_id = #letterDemandId#
	            </isGreaterThan>
			</dynamic>
    </select>

</sqlMap>
