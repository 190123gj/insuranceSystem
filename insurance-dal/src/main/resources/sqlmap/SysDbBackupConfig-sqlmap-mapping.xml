<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table sys_db_backup_config -->
    <resultMap id="RM-SYS-DB-BACKUP-CONFIG" class="com.born.insurance.dal.dataobject.SysDbBackupConfigDO">
        <result property="configId" column="config_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="dbUser" column="db_user" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="dbPsw" column="db_psw" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="dbHost" column="db_host" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="dbPort" column="db_port" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="dbHome" column="db_home" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="schemeName" column="scheme_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="backupFolder" column="backup_folder" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="backupInvervalMinute" column="backup_inverval_minute" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="backupTimeBegin" column="backup_time_begin" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="backupTimeEnd" column="backup_time_end" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="inUse" column="in_use" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisSysDbBackupConfigDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisSysDbBackupConfigDAO.insert -->
    <insert id="MS-SYS-DB-BACKUP-CONFIG-INSERT">
    <![CDATA[
        insert /*MS-YRD-SYS-DB-BACKUP-CONFIG-INSERT*/ into sys_db_backup_config(config_id,db_home,db_user,db_psw,db_host,db_port,scheme_name,backup_folder,backup_inverval_minute,backup_time_begin,backup_time_end,in_use,raw_add_time) values (#configId#, #dbHome#, #dbUser#, #dbPsw#, #dbHost#, #dbPort#, #schemeName#, #backupFolder#, #backupInvervalMinute#, #backupTimeBegin#, #backupTimeEnd#, #inUse#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisSysDbBackupConfigDAO.update -->
    <update id="MS-SYS-DB-BACKUP-CONFIG-UPDATE">
    <![CDATA[
        update /*MS-YRD-SYS-DB-BACKUP-CONFIG-UPDATE*/ sys_db_backup_config set db_home=#dbHome#, db_user=#dbUser#, db_psw=#dbPsw#, db_host=#dbHost#, db_port=#dbPort#, scheme_name=#schemeName#, backup_folder=#backupFolder#, backup_inverval_minute=#backupInvervalMinute#, backup_time_begin=#backupTimeBegin#, backup_time_end=#backupTimeEnd#, in_use=#inUse# where (config_id = #configId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisSysDbBackupConfigDAO.findById -->
    <select id="MS-SYS-DB-BACKUP-CONFIG-FIND-BY-ID" resultMap="RM-SYS-DB-BACKUP-CONFIG">
    <![CDATA[
        select /*MS-YRD-SYS-DB-BACKUP-CONFIG-FIND-BY-ID*/ * from sys_db_backup_config where (config_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisSysDbBackupConfigDAO.fandAll -->
    <select id="MS-SYS-DB-BACKUP-CONFIG-FAND-ALL" resultMap="RM-SYS-DB-BACKUP-CONFIG">
    <![CDATA[
        select /*MS-YRD-SYS-DB-BACKUP-CONFIG-FAND-ALL*/ * from sys_db_backup_config
    ]]>
    </select>

    <!-- mapped statement for IbatisSysDbBackupConfigDAO.deleteById -->
    <delete id="MS-SYS-DB-BACKUP-CONFIG-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-SYS-DB-BACKUP-CONFIG-DELETE-BY-ID*/ from sys_db_backup_config where (config_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisSysDbBackupConfigDAO.deleteByHost -->
    <delete id="MS-SYS-DB-BACKUP-CONFIG-DELETE-BY-HOST">
    <![CDATA[
        delete /*MS-YRD-SYS-DB-BACKUP-CONFIG-DELETE-BY-HOST*/ from sys_db_backup_config where (db_host = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisSysDbBackupConfigDAO.findByCondition -->
    <select id="MS-SYS-DB-BACKUP-CONFIG-FIND-BY-CONDITION" resultMap="RM-SYS-DB-BACKUP-CONFIG">
        SELECT /*MS-YRD-SYS-DB-BACKUP-CONFIG-FIND-BY-CONDITION*/ * from sys_db_backup_config
	         WHERE 1=1
	        <dynamic>
	            <isGreaterThan property="sysDbBackupConfig.configId"  compareValue="0" prepend=" and ">
	                config_id = #sysDbBackupConfig.configId#
	            </isGreaterThan>
	             <isNotEmpty property="sysDbBackupConfig.dbHost" prepend=" and ">
	                db_host = #sysDbBackupConfig.dbHost#
	            </isNotEmpty>
	             <isNotEmpty property="sysDbBackupConfig.schemeName" prepend=" and ">
	                scheme_name = #sysDbBackupConfig.schemeName#
	            </isNotEmpty>
	             <isNotEmpty property="sysDbBackupConfig.inUse" prepend=" and ">
	                in_use = #sysDbBackupConfig.inUse#
	            </isNotEmpty>
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisSysDbBackupConfigDAO.findByConditionCount -->
    <select id="MS-SYS-DB-BACKUP-CONFIG-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-SYS-DB-BACKUP-CONFIG-FIND-BY-CONDITION-COUNT*/  count(*)  FROM sys_db_backup_config WHERE 1=1
		        <dynamic>
	            <isGreaterThan property="configId"  compareValue="0" prepend=" and ">
	                config_id = #configId#
	            </isGreaterThan>
	             <isNotEmpty property="dbHost"  prepend=" and ">
	                db_host = #dbHost#
	            </isNotEmpty>
             	<isNotEmpty property="schemeName" prepend=" and ">
	                scheme_name = #schemeName#
	            </isNotEmpty>
	             <isNotEmpty property="inUse" prepend=" and ">
	                in_use = #inUse#
	            </isNotEmpty>	            	            
	        </dynamic>
    </select>

</sqlMap>
