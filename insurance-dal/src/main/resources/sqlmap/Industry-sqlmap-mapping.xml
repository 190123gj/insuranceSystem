<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table industry -->
    <resultMap id="RM-INDUSTRY" class="com.born.insurance.dal.dataobject.IndustryDO">
        <result property="id" column="id" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="typeBig" column="type_big" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="typeMedium" column="type_medium" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="typeSmall" column="type_small" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level" column="level" javaType="int" jdbcType="SMALLINT" nullValue="0"/>
        <result property="parentCode" column="parent_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="code" column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="reviewTemplate" column="review_template" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sortOrder" column="sort_order" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisIndustryDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisIndustryDAO.insert -->
    <insert id="MS-INDUSTRY-INSERT">
    <![CDATA[
        insert /*MS-YRD-INDUSTRY-INSERT*/ into industry(type,type_big,type_medium,type_small,level,code,parent_code,name,remark,review_template,sort_order,raw_add_time) values (#type#, #typeBig#, #typeMedium#, #typeSmall#, #level#, #code#, #parentCode#, #name#, #remark#, #reviewTemplate#, #sortOrder#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisIndustryDAO.update -->
    <update id="MS-INDUSTRY-UPDATE">
    <![CDATA[
        update /*MS-YRD-INDUSTRY-UPDATE*/ industry set type=#type#, type_big=#typeBig#, type_medium=#typeMedium#, type_small=#typeSmall#, level=#level#, code=#code#, parent_code=#parentCode#, name=#name#, remark=#remark#, review_template=#reviewTemplate#, sort_order=#sortOrder# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisIndustryDAO.findById -->
    <select id="MS-INDUSTRY-FIND-BY-ID" resultMap="RM-INDUSTRY">
    <![CDATA[
        select /*MS-YRD-INDUSTRY-FIND-BY-ID*/ * from industry where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisIndustryDAO.deleteById -->
    <delete id="MS-INDUSTRY-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-INDUSTRY-DELETE-BY-ID*/ from industry where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisIndustryDAO.findByCondition -->
    <select id="MS-INDUSTRY-FIND-BY-CONDITION" resultMap="RM-INDUSTRY">
        SELECT /*MS-YRD-INDUSTRY-FIND-BY-CONDITION*/ * from industry where 1=1
	        <dynamic>
	            <isGreaterThan property="industry.id"  compareValue="0" prepend=" and ">
	                id = #industry.id#
	            </isGreaterThan>
	            <isGreaterThan property="industry.level"  compareValue="0" prepend=" and ">
	                level = #industry.level#
	            </isGreaterThan>
	             <isNotEmpty property="industry.code" prepend=" and ">
	               	code = #industry.code#
	            </isNotEmpty>
	             <isNotEmpty property="industry.parentCode" prepend=" and ">
	               	parent_code = #industry.parentCode#
	            </isNotEmpty>
	             <isNotEmpty property="industry.name" prepend=" and ">
	               name like concat('%',#industry.name#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="industry.type" prepend=" and ">
	               type = #industry.type#
	            </isNotEmpty>
	             <isNotEmpty property="industry.typeBig" prepend=" and ">
	               type_big = #industry.typeBig#
	            </isNotEmpty>
	             <isNotEmpty property="industry.typeMedium" prepend=" and ">
	               type_medium = #industry.typeMedium#
	            </isNotEmpty>
	             <isNotEmpty property="industry.typeSmall" prepend=" and ">
	               type_small = #industry.typeSmall#
	            </isNotEmpty>
	             <isNotEmpty property="industry.reviewTemplate" prepend=" and ">
	               review_template = #industry.reviewTemplate#
	            </isNotEmpty>
	        </dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisIndustryDAO.findByConditionCount -->
    <select id="MS-INDUSTRY-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-INDUSTRY-FIND-BY-CONDITION-COUNT*/  count(*)  FROM industry  where 1=1
	        <dynamic>
	            <isGreaterThan property="id"  compareValue="0" prepend=" and ">
	                id = #id#
	            </isGreaterThan>
	            <isGreaterThan property="level"  compareValue="0" prepend=" and ">
	                level = #level#
	            </isGreaterThan>
	             <isNotEmpty property="code" prepend=" and ">
	               	code = #code#
	            </isNotEmpty>
	             <isNotEmpty property="parentCode" prepend=" and ">
	               	parent_code = #parentCode#
	            </isNotEmpty>
	             <isNotEmpty property="name" prepend=" and ">
	               name like concat('%',#name#,'%')
	            </isNotEmpty>
	             <isNotEmpty property="type" prepend=" and ">
	               type = #type#
	            </isNotEmpty>
	             <isNotEmpty property="typeBig" prepend=" and ">
	               type_big = #typeBig#
	            </isNotEmpty>
	             <isNotEmpty property="typeMedium" prepend=" and ">
	               type_medium = #typeMedium#
	            </isNotEmpty>
	             <isNotEmpty property="typeSmall" prepend=" and ">
	               type_small = #typeSmall#
	            </isNotEmpty>
	             <isNotEmpty property="reviewTemplate" prepend=" and ">
	               review_template = #reviewTemplate#
	            </isNotEmpty>
	        </dynamic>
    </select>

</sqlMap>
