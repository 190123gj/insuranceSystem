<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table message_info -->
    <resultMap id="RM-MESSAGE-INFO" class="com.born.insurance.dal.dataobject.MessageInfoDO">
        <result property="messageId" column="message_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="messageTitle" column="message_title" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageType" column="message_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageStatus" column="message_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageSubject" column="message_subject" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageContent" column="message_content" javaType="java.lang.String" jdbcType="LONGTEXT"/>
        <result property="notificationObject" column="notification_object" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="linkUrl" column="link_url" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="viewType" column="view_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="notificationType" column="notification_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageSendDate" column="message_send_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="messagePlanSendDate" column="message_plan_send_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="messageSenderId" column="message_sender_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="messageSenderName" column="message_sender_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageSenderAccount" column="message_sender_account" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageSenderRole" column="message_sender_role" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisMessageInfoDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisMessageInfoDAO.insert -->
    <insert id="MS-MESSAGE-INFO-INSERT">
        insert /*MS-YRD-MESSAGE-INFO-INSERT*/ /*MS-YRD-MESSAGE-INFO-INSERT*/ into message_info(message_id,message_title,message_type,message_status,message_subject,message_content,notification_object,view_type,link_url,notification_type,message_send_date,message_plan_send_date,message_sender_id,message_sender_name,message_sender_account,message_sender_role,raw_add_time) values (#messageId#, #messageTitle#, #messageType#, #messageStatus#, #messageSubject#, #messageContent#, #notificationObject#, #viewType#, #linkUrl#, #notificationType#, #messageSendDate#, #messagePlanSendDate#, #messageSenderId#, #messageSenderName#,#messageSenderAccount#,#messageSenderRole#,#rawAddTime#)
	       <selectKey  resultClass ="long"  keyProperty ="messageId" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisMessageInfoDAO.update -->
    <update id="MS-MESSAGE-INFO-UPDATE">
    <![CDATA[
        update /*MS-YRD-MESSAGE-INFO-UPDATE*/ message_info set message_title=#messageTitle#, message_type=#messageType#, message_status=#messageStatus#, message_subject=#messageSubject#, message_content=#messageContent#, notification_object=#notificationObject#, view_type=#viewType#, link_url=#linkUrl#, notification_type=#notificationType#, message_send_date=#messageSendDate#, message_plan_send_date=#messagePlanSendDate#, message_sender_id=#messageSenderId#, message_sender_name=#messageSenderName#, message_sender_account=#messageSenderAccount#, message_sender_role=#messageSenderRole# where (message_id = #messageId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisMessageInfoDAO.findById -->
    <select id="MS-MESSAGE-INFO-FIND-BY-ID" resultMap="RM-MESSAGE-INFO">
    <![CDATA[
        select /*MS-YRD-MESSAGE-INFO-FIND-BY-ID*/ * from message_info where (message_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisMessageInfoDAO.deleteById -->
    <delete id="MS-MESSAGE-INFO-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-MESSAGE-INFO-DELETE-BY-ID*/ from message_info where (message_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisMessageInfoDAO.findByCondition -->
    <select id="MS-MESSAGE-INFO-FIND-BY-CONDITION" resultMap="RM-MESSAGE-INFO">
        SELECT /*MS-YRD-MESSAGE-INFO-FIND-BY-CONDITION*/  *  FROM message_info WHERE 1=1
		<dynamic>
			<isGreaterThan property="messageInfo.messageId" compareValue="0" prepend=" and ">
				message_id = #messageInfo.messageId#
			</isGreaterThan>
			<isGreaterThan property="messageInfo.messageSenderId" compareValue="0" prepend=" and ">
				message_sender_id = #messageInfo.messageSenderId#
			</isGreaterThan>
			<isNotEmpty property="messageInfo.messageSenderName" prepend=" and ">
				message_sender_name = #messageInfo.messageSenderName#
			</isNotEmpty>
			<isNotEmpty property="messageInfo.messageSenderAccount" prepend=" and ">
				message_sender_account = #messageInfo.messageSenderAccount#
			</isNotEmpty>
			<isNotEmpty property="messageInfo.messageTitle" prepend=" and ">
				message_title like concat('%',#messageInfo.messageTitle#,'%')
			</isNotEmpty>
			<isNotEmpty property="beginMessageSendDate" prepend=" and ">
				 <![CDATA[	message_send_date >= #beginMessageSendDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="endMessageSendDate" prepend=" and ">
				 <![CDATA[	message_send_date <= #endMessageSendDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="beginMessageCreateDate" prepend=" and ">
				 <![CDATA[	raw_add_time >= #beginMessageCreateDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="endMessageCreateDate" prepend=" and ">
				 <![CDATA[	raw_add_time <= #endMessageCreateDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="messageInfo.viewType" prepend=" and ">
				view_type = #messageInfo.viewType#
			</isNotEmpty>
			<isNotEmpty property="messageInfo.messageType" prepend=" and ">
				message_type = #messageInfo.messageType#
			</isNotEmpty>
			<isNotEmpty property="messageInfo.messageSenderRole" prepend=" and ">
				message_sender_role = #messageInfo.messageSenderRole#
			</isNotEmpty>
			
			<isNotEmpty property="statusList" prepend=" and ">
				message_status in
				<iterate property="statusList" open="(" close=")" conjunction=",">
					#statusList[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
	    <isEmpty property="sortCol" prepend=" order by ">
	    	message_id desc
	    </isEmpty>		
		<isNotEmpty property="sortCol" prepend=" order by ">
	         $sortCol$
	     	<isNotEmpty property="sortOrder">
            	 $sortOrder$
        	</isNotEmpty>
	    </isNotEmpty>		
		LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisMessageInfoDAO.findCountByCondition -->
    <select id="MS-MESSAGE-INFO-FIND-COUNT-BY-CONDITION" resultClass="long">
        SELECT /*MS-YRD-MESSAGE-INFO-FIND-COUNT-BY-CONDITION*/  count(*)  FROM message_info l
		WHERE 1=1
		<dynamic>
			<isGreaterThan property="messageInfo.messageId" compareValue="0" prepend=" and ">
				message_id = #messageInfo.messageId#
			</isGreaterThan>
			<isGreaterThan property="messageInfo.messageSenderId" compareValue="0" prepend=" and ">
				message_sender_id = #messageInfo.messageSenderId#
			</isGreaterThan>
			<isNotEmpty property="messageInfo.messageSenderName" prepend=" and ">
				message_sender_name = #messageInfo.messageSenderName#
			</isNotEmpty>
			<isNotEmpty property="messageInfo.messageSenderAccount" prepend=" and ">
				message_sender_account = #messageInfo.messageSenderAccount#
			</isNotEmpty>	
			<isNotEmpty property="messageInfo.messageTitle" prepend=" and ">
				message_title like concat('%',#messageInfo.messageTitle#,'%')
			</isNotEmpty>					
			<isNotEmpty property="beginMessageSendDate" prepend=" and ">
				 <![CDATA[	message_send_date >= #beginMessageSendDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="endMessageSendDate" prepend=" and ">
				 <![CDATA[	message_send_date <= #endMessageSendDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="beginMessageCreateDate" prepend=" and ">
				 <![CDATA[	raw_add_time >= #beginMessageCreateDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="endMessageCreateDate" prepend=" and ">
				 <![CDATA[	raw_add_time <= #endMessageCreateDate#  ]]>
			</isNotEmpty>
			<isNotEmpty property="messageInfo.viewType" prepend=" and ">
				view_type = #messageInfo.viewType#
			</isNotEmpty>
			<isNotEmpty property="messageInfo.messageType" prepend=" and ">
				message_type = #messageInfo.messageType#
			</isNotEmpty>
			<isNotEmpty property="messageInfo.messageSenderRole" prepend=" and ">
				message_sender_role = #messageInfo.messageSenderRole#
			</isNotEmpty>
			<isNotEmpty property="statusList" prepend=" and ">
				message_status in
				<iterate property="statusList" open="(" close=")" conjunction=",">
					#statusList[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
    </select>

</sqlMap>
