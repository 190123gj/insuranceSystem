<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table insurance_contact_cert -->
    <resultMap id="RM-INSURANCE-CONTACT-CERT" class="com.born.insurance.dal.dataobject.InsuranceContactCertDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="letterId" column="letter_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="certId" column="cert_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisInsuranceContactCertDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisInsuranceContactCertDAO.insert -->
    <insert id="MS-INSURANCE-CONTACT-CERT-INSERT">
        INSERT /*MS-YRD-INSURANCE-CONTACT-CERT-INSERT*/ INTO insurance_contact_cert(id,letter_id,user_id,cert_id) VALUES (#id#,#letterId#,#userId#,#certId#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisInsuranceContactCertDAO.update -->
    <update id="MS-INSURANCE-CONTACT-CERT-UPDATE">
    <![CDATA[
        update /*MS-YRD-INSURANCE-CONTACT-CERT-UPDATE*/ insurance_contact_cert set letter_id=#letterId#, user_id=#userId#, cert_id=#certId# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisInsuranceContactCertDAO.findById -->
    <select id="MS-INSURANCE-CONTACT-CERT-FIND-BY-ID" resultMap="RM-INSURANCE-CONTACT-CERT">
    <![CDATA[
        select /*MS-YRD-INSURANCE-CONTACT-CERT-FIND-BY-ID*/ id, letter_id, user_id, cert_id from insurance_contact_cert where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisInsuranceContactCertDAO.deleteById -->
    <delete id="MS-INSURANCE-CONTACT-CERT-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-INSURANCE-CONTACT-CERT-DELETE-BY-ID*/ from insurance_contact_cert where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisInsuranceContactCertDAO.findByCondition -->
    <select id="MS-INSURANCE-CONTACT-CERT-FIND-BY-CONDITION" resultMap="RM-INSURANCE-CONTACT-CERT">
        SELECT /*MS-YRD-INSURANCE-CONTACT-CERT-FIND-BY-CONDITION*/  id ,letter_id ,user_id ,cert_id  FROM insurance_contact_cert where 1=1

	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisInsuranceContactCertDAO.findByConditionCount -->
    <select id="MS-INSURANCE-CONTACT-CERT-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-INSURANCE-CONTACT-CERT-FIND-BY-CONDITION-COUNT*/  count(*) FROM insurance_contact_cert  where 1=1
    </select>

</sqlMap>
