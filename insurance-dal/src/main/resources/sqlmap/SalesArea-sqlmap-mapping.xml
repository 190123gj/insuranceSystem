<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table sales_areas -->
    <resultMap id="RM-SALES-AREA" class="com.born.insurance.dal.dataobject.SalesAreaDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="productId" column="product_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="provinceCode" column="province_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="provinceName" column="province_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isAllProvince" column="is_all_province" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cityCode" column="city_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="cityName" column="city_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="type" column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisSalesAreaDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisSalesAreaDAO.insert -->
    <insert id="MS-SALES-AREA-INSERT">
        INSERT /*MS-YRD-SALES-AREA-INSERT*/ INTO sales_areas(id,product_id,province_code,province_name,is_all_province,city_code,city_name,type) VALUES (#id#,#productId#,#provinceCode#,#provinceName#,#isAllProvince#,#cityCode#,#cityName#,#type#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisSalesAreaDAO.update -->
    <update id="MS-SALES-AREA-UPDATE">
    <![CDATA[
        update /*MS-YRD-SALES-AREA-UPDATE*/ sales_areas set product_id=#productId#, province_code=#provinceCode#, province_name=#provinceName#, is_all_province=#isAllProvince#, city_code=#cityCode#, city_name=#cityName#, type=#type# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisSalesAreaDAO.findById -->
    <select id="MS-SALES-AREA-FIND-BY-ID" resultMap="RM-SALES-AREA">
    <![CDATA[
        select /*MS-YRD-SALES-AREA-FIND-BY-ID*/ id, product_id, province_code, province_name, is_all_province, city_code, city_name, type from sales_areas where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisSalesAreaDAO.deleteById -->
    <delete id="MS-SALES-AREA-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-YRD-SALES-AREA-DELETE-BY-ID*/ from sales_areas where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisSalesAreaDAO.deleteByProductIdAndType -->
    <delete id="MS-SALES-AREA-DELETE-BY-PRODUCT-ID-AND-TYPE">
    <![CDATA[
        delete /*MS-YRD-SALES-AREA-DELETE-BY-PRODUCT-ID-AND-TYPE*/ from sales_areas where ((product_id = #productId#) AND (type = #type#))
    ]]>
    </delete>

    <!-- mapped statement for IbatisSalesAreaDAO.findByCondition -->
    <select id="MS-SALES-AREA-FIND-BY-CONDITION" resultMap="RM-SALES-AREA">
        SELECT /*MS-YRD-SALES-AREA-FIND-BY-CONDITION*/  id ,product_id ,province_code ,province_name ,is_all_province ,city_code ,city_name ,type  FROM sales_areas WHERE 1=1
             <dynamic>
                  <isGreaterThan property="salesArea.productId"  compareValue="0" prepend=" and ">
	                product_id = #salesArea.productId#
	              </isGreaterThan>

	             <isNotEmpty property="salesArea.type" prepend=" and ">
	                     type = #salesArea.type#
	             </isNotEmpty>

	              <isNotEmpty property="salesArea.cityCode" prepend=" and ">
	                     city_code = #salesArea.cityCode#
	             </isNotEmpty>

	              <isNotEmpty property="salesArea.provinceCode" prepend=" and ">
	                     province_code = #salesArea.provinceCode#
	             </isNotEmpty>


			</dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisSalesAreaDAO.findByConditionCount -->
    <select id="MS-SALES-AREA-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-YRD-SALES-AREA-FIND-BY-CONDITION-COUNT*/  count(*) FROM sales_areas  where 1=1
	            <dynamic>
                  <isGreaterThan property="productId"  compareValue="0" prepend=" and ">
	                product_id = #productId#
	              </isGreaterThan>

                  <isNotEmpty property="cityCode" prepend=" and ">
	                     city_code = #cityCode#
	             </isNotEmpty>

	            <isNotEmpty property="provinceCode" prepend=" and ">
	                     province_code = #provinceCode#
	             </isNotEmpty>

	             <isNotEmpty property="type" prepend=" and ">
                     type = #type#
	             </isNotEmpty>

			</dynamic>
    </select>

</sqlMap>
