/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.PriceContactLetterDemandDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>price_contact_letter_demand</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/price_contact_letter_demand.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface PriceContactLetterDemandDAO {
	/**
	 *  Insert one <tt>PriceContactLetterDemandDO</tt> object to DB table <tt>price_contact_letter_demand</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into price_contact_letter_demand(id,contact_letter_id,demand_type,demand_no,demand_name,industry,busi_scope,busi_areas,busi_address,busi_acreage,parking_num,indoor,outdoor,tempdoor,motodoor,policy_holder,insured_person,bill_lading_no,credit_letter_no,contract_no,departure_date,transport_way,insurance_way,transport_num,transport_tools,invoice_no,invoice_value,addition_ratio,departure_place,via_place,destination_place,risk_info,project_name,project_owner,engineering_contractor,engineering_subcontractor,engineering_design_unit,design_unit_level,engineering_cost,construction_area,project_duration,construction_period,construction_period_begin,construction_period_end,construction_period_num,commissioning_period_begin,commissioning_period_end,commissioning_period_num,warranty_period_begin,warranty_period_end,warranty_period_num,project_period_begin,project_period_end,project_period_num,commissioning_period,warranty_period,construction_site,delivery_ship_place,trial_regional,which_start,berth,be_launched,airworthiness,delivery_vessel,ship_type,load_ton,total_ton,total_length,type_width,deep,products,floor_num,floor_straight_num,floor_stairs_num,pool_num,pool_directly_num,pool_no_directly_num,remark,version,ext) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param priceContactLetterDemand
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(PriceContactLetterDemandDO priceContactLetterDemand) throws DataAccessException;

	/**
	 *  Update DB table <tt>price_contact_letter_demand</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update price_contact_letter_demand set contact_letter_id=?, demand_type=?, demand_no=?, demand_name=?, industry=?, busi_scope=?, busi_areas=?, busi_address=?, busi_acreage=?, parking_num=?, indoor=?, outdoor=?, tempdoor=?, motodoor=?, policy_holder=?, insured_person=?, bill_lading_no=?, credit_letter_no=?, contract_no=?, departure_date=?, transport_way=?, insurance_way=?, transport_num=?, transport_tools=?, invoice_no=?, invoice_value=?, addition_ratio=?, departure_place=?, via_place=?, destination_place=?, risk_info=?, project_name=?, project_owner=?, engineering_contractor=?, engineering_subcontractor=?, engineering_design_unit=?, design_unit_level=?, engineering_cost=?, construction_area=?, project_duration=?, construction_period=?, construction_period_begin=?, construction_period_end=?, construction_period_num=?, commissioning_period_begin=?, commissioning_period_end=?, commissioning_period_num=?, warranty_period_begin=?, warranty_period_end=?, warranty_period_num=?, project_period_begin=?, project_period_end=?, project_period_num=?, commissioning_period=?, warranty_period=?, construction_site=?, delivery_ship_place=?, trial_regional=?, which_start=?, berth=?, be_launched=?, airworthiness=?, delivery_vessel=?, ship_type=?, load_ton=?, total_ton=?, total_length=?, type_width=?, deep=?, products=?, floor_num=?, floor_straight_num=?, floor_stairs_num=?, pool_num=?, pool_directly_num=?, pool_no_directly_num=?, remark=?, version=?, ext=? where (id = ?)</tt>
	 *
	 *	@param priceContactLetterDemand
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(PriceContactLetterDemandDO priceContactLetterDemand) throws DataAccessException;

	/**
	 *  Query DB table <tt>price_contact_letter_demand</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, contact_letter_id, demand_type, demand_no, demand_name, industry, busi_scope, busi_areas, busi_address, busi_acreage, parking_num, indoor, outdoor, tempdoor, motodoor, policy_holder, insured_person, bill_lading_no, credit_letter_no, contract_no, departure_date, transport_way, insurance_way, transport_num, transport_tools, invoice_no, invoice_value, addition_ratio, departure_place, via_place, destination_place, risk_info, project_name, project_owner, engineering_contractor, engineering_subcontractor, engineering_design_unit, design_unit_level, engineering_cost, construction_area, project_duration, construction_period, construction_period_begin, construction_period_end, construction_period_num, commissioning_period_begin, commissioning_period_end, commissioning_period_num, warranty_period_begin, warranty_period_end, warranty_period_num, project_period_begin, project_period_end, project_period_num, commissioning_period, warranty_period, construction_site, delivery_ship_place, trial_regional, which_start, berth, be_launched, airworthiness, delivery_vessel, ship_type, load_ton, total_ton, total_length, type_width, deep, products, floor_num, floor_straight_num, floor_stairs_num, pool_num, pool_directly_num, pool_no_directly_num, remark, version, ext from price_contact_letter_demand where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return PriceContactLetterDemandDO
	 *	@throws DataAccessException
	 */	 
    public PriceContactLetterDemandDO findById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>price_contact_letter_demand</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from price_contact_letter_demand where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>price_contact_letter_demand</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, contact_letter_id, demand_type, demand_no, demand_name, industry, busi_scope, busi_areas, busi_address, busi_acreage, parking_num, indoor, outdoor, tempdoor, motodoor, policy_holder, insured_person, bill_lading_no, credit_letter_no, contract_no, departure_date, transport_way, insurance_way, transport_num, transport_tools, invoice_no, invoice_value, addition_ratio, departure_place, via_place, destination_place, risk_info, project_name, project_owner, engineering_contractor, engineering_subcontractor, engineering_design_unit, design_unit_level, engineering_cost, construction_area, project_duration, construction_period, construction_period_begin, construction_period_end, construction_period_num, commissioning_period_begin, commissioning_period_end, commissioning_period_num, warranty_period_begin, warranty_period_end, warranty_period_num, project_period_begin, project_period_end, project_period_num, commissioning_period, warranty_period, construction_site, delivery_ship_place, trial_regional, which_start, berth, be_launched, airworthiness, delivery_vessel, ship_type, load_ton, total_ton, total_length, type_width, deep, products, floor_num, floor_straight_num, floor_stairs_num, pool_num, pool_directly_num, pool_no_directly_num, remark, version, ext from price_contact_letter_demand where (1 = 1)</tt>
	 *
	 *	@param priceContactLetterDemand
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<PriceContactLetterDemandDO>
	 *	@throws DataAccessException
	 */	 
    public List<PriceContactLetterDemandDO> findByCondition(PriceContactLetterDemandDO priceContactLetterDemand, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>price_contact_letter_demand</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from price_contact_letter_demand where (1 = 1)</tt>
	 *
	 *	@param priceContactLetterDemand
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(PriceContactLetterDemandDO priceContactLetterDemand) throws DataAccessException;

}