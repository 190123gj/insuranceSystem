/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.ibatis;

import com.born.insurance.dal.daointerface.SysDbBackupConfigDAO;
import com.born.insurance.dal.dataobject.SysDbBackupConfigDO;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;


// auto generated imports
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.born.fcs.pm.dal.daointerface.SysDbBackupConfigDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/sys_db_backup_config.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisSysDbBackupConfigDAO extends SqlMapClientDaoSupport implements SysDbBackupConfigDAO {
	/**
	 *  Insert one <tt>SysDbBackupConfigDO</tt> object to DB table <tt>sys_db_backup_config</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into sys_db_backup_config(config_id,db_home,db_user,db_psw,db_host,db_port,scheme_name,backup_folder,backup_inverval_minute,backup_time_begin,backup_time_end,in_use,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param sysDbBackupConfig
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(SysDbBackupConfigDO sysDbBackupConfig) throws DataAccessException {
    	if (sysDbBackupConfig == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-SYS-DB-BACKUP-CONFIG-INSERT", sysDbBackupConfig);

        return sysDbBackupConfig.getConfigId();
    }

	/**
	 *  Update DB table <tt>sys_db_backup_config</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sys_db_backup_config set db_home=?, db_user=?, db_psw=?, db_host=?, db_port=?, scheme_name=?, backup_folder=?, backup_inverval_minute=?, backup_time_begin=?, backup_time_end=?, in_use=? where (config_id = ?)</tt>
	 *
	 *	@param sysDbBackupConfig
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(SysDbBackupConfigDO sysDbBackupConfig) throws DataAccessException {
    	if (sysDbBackupConfig == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-SYS-DB-BACKUP-CONFIG-UPDATE", sysDbBackupConfig);
    }

	/**
	 *  Query DB table <tt>sys_db_backup_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_db_backup_config where (config_id = ?)</tt>
	 *
	 *	@param configId
	 *	@return SysDbBackupConfigDO
	 *	@throws DataAccessException
	 */	 
    public SysDbBackupConfigDO findById(long configId) throws DataAccessException {
        Long param = new Long(configId);

        return (SysDbBackupConfigDO) getSqlMapClientTemplate().queryForObject("MS-SYS-DB-BACKUP-CONFIG-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>sys_db_backup_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_db_backup_config</tt>
	 *
	 *	@return List<SysDbBackupConfigDO>
	 *	@throws DataAccessException
	 */	 
    public List<SysDbBackupConfigDO> fandAll() throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-SYS-DB-BACKUP-CONFIG-FAND-ALL", null);

    }

	/**
	 *  Delete records from DB table <tt>sys_db_backup_config</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from sys_db_backup_config where (config_id = ?)</tt>
	 *
	 *	@param configId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long configId) throws DataAccessException {
        Long param = new Long(configId);

        return getSqlMapClientTemplate().delete("MS-SYS-DB-BACKUP-CONFIG-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>sys_db_backup_config</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from sys_db_backup_config where (db_host = ?)</tt>
	 *
	 *	@param dbHost
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByHost(String dbHost) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-SYS-DB-BACKUP-CONFIG-DELETE-BY-HOST", dbHost);
    }

	/**
	 *  Query DB table <tt>sys_db_backup_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_db_backup_config where (1 = 1)</tt>
	 *
	 *	@param sysDbBackupConfig
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<SysDbBackupConfigDO>
	 *	@throws DataAccessException
	 */	 
    public List<SysDbBackupConfigDO> findByCondition(SysDbBackupConfigDO sysDbBackupConfig, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException {
    	if (sysDbBackupConfig == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("sysDbBackupConfig", sysDbBackupConfig);
        param.put("sortCol", sortCol);
        param.put("sortOrder", sortOrder);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

        return getSqlMapClientTemplate().queryForList("MS-SYS-DB-BACKUP-CONFIG-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>sys_db_backup_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from sys_db_backup_config where (1 = 1)</tt>
	 *
	 *	@param sysDbBackupConfig
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(SysDbBackupConfigDO sysDbBackupConfig) throws DataAccessException {
    	if (sysDbBackupConfig == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-SYS-DB-BACKUP-CONFIG-FIND-BY-CONDITION-COUNT", sysDbBackupConfig);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}