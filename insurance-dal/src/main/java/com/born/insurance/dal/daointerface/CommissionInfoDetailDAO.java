/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.CommissionInfoDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>commission_info_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/commission_info_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface CommissionInfoDetailDAO {
	/**
	 *  Insert one <tt>CommissionInfoDetailDO</tt> object to DB table <tt>commission_info_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into commission_info_detail(commission_info_detail_id,commission_info_id,appserial_period,plan_pay_date,receivable_amount,raw_add_time,update_add_time) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param commissionInfoDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(CommissionInfoDetailDO commissionInfoDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>commission_info_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update commission_info_detail set commission_info_id=?, appserial_period=?, plan_pay_date=?, receivable_amount=?, update_add_time=? where (commission_info_detail_id = ?)</tt>
	 *
	 *	@param commissionInfoDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(CommissionInfoDetailDO commissionInfoDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>commission_info_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select commission_info_detail_id, commission_info_id, appserial_period, plan_pay_date, receivable_amount, raw_add_time, update_add_time from commission_info_detail where (commission_info_detail_id = ?)</tt>
	 *
	 *	@param commissionInfoDetailId
	 *	@return CommissionInfoDetailDO
	 *	@throws DataAccessException
	 */	 
    public CommissionInfoDetailDO findById(long commissionInfoDetailId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>commission_info_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from commission_info_detail where (commission_info_detail_id = ?)</tt>
	 *
	 *	@param commissionInfoDetailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long commissionInfoDetailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>commission_info_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select commission_info_detail_id, commission_info_id, appserial_period, plan_pay_date, receivable_amount, raw_add_time, update_add_time from commission_info_detail where (1 = 1)</tt>
	 *
	 *	@param commissionInfoDetail
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<CommissionInfoDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<CommissionInfoDetailDO> findByCondition(CommissionInfoDetailDO commissionInfoDetail, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>commission_info_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from commission_info_detail where (1 = 1)</tt>
	 *
	 *	@param commissionInfoDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(CommissionInfoDetailDO commissionInfoDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>commission_info_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select commission_info_detail_id, commission_info_id, appserial_period, plan_pay_date, receivable_amount, raw_add_time, update_add_time from commission_info_detail where (commission_info_id = ?)</tt>
	 *
	 *	@param commissionInfoId
	 *	@return List<CommissionInfoDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<CommissionInfoDetailDO> findCommissionInfoDetails(long commissionInfoId) throws DataAccessException;

	/**
	 *  Query DB table <tt>commission_info_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select commission_info_detail_id, commission_info_id, appserial_period, plan_pay_date, receivable_amount, raw_add_time, update_add_time from commission_info_detail where (1 = 1)</tt>
	 *
	 *	@param businessBillId
	 *	@param appserialPeriod
	 *	@return CommissionInfoDetailDO
	 *	@throws DataAccessException
	 */	 
    public CommissionInfoDetailDO getCommissionInfo(long businessBillId, String appserialPeriod) throws DataAccessException;

	/**
	 *  Query DB table <tt>commission_info_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select commission_info_detail_id, commission_info_id, appserial_period, plan_pay_date, receivable_amount, raw_add_time, update_add_time from commission_info_detail where (1 = 1)</tt>
	 *
	 *	@param businessBillId
	 *	@return List<CommissionInfoDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<CommissionInfoDetailDO> getCommissionInfoDetails(long businessBillId) throws DataAccessException;

}