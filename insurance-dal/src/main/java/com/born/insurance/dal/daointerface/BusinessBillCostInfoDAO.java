/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.BusinessBillCostInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>business_bill_cost_info</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/business_bill_cost_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface BusinessBillCostInfoDAO {
	/**
	 *  Insert one <tt>BusinessBillCostInfoDO</tt> object to DB table <tt>business_bill_cost_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into business_bill_cost_info(cost_info_id,proportion,charge_amount,collect_date,actual_collect_date) values (?, ?, ?, ?, ?)</tt>
	 *
	 *	@param businessBillCostInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(BusinessBillCostInfoDO businessBillCostInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>business_bill_cost_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update business_bill_cost_info set proportion=?, charge_amount=?, collect_date=?, actual_collect_date=? where (cost_info_id = ?)</tt>
	 *
	 *	@param businessBillCostInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(BusinessBillCostInfoDO businessBillCostInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>business_bill_cost_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select cost_info_id, proportion, charge_amount, collect_date, actual_collect_date from business_bill_cost_info where (cost_info_id = ?)</tt>
	 *
	 *	@param costInfoId
	 *	@return BusinessBillCostInfoDO
	 *	@throws DataAccessException
	 */	 
    public BusinessBillCostInfoDO findById(long costInfoId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>business_bill_cost_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from business_bill_cost_info where (cost_info_id = ?)</tt>
	 *
	 *	@param costInfoId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long costInfoId) throws DataAccessException;

	/**
	 *  Query DB table <tt>business_bill_cost_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select cost_info_id, proportion, charge_amount, collect_date, actual_collect_date from business_bill_cost_info where (1 = 1)</tt>
	 *
	 *	@param businessBillCostInfo
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<BusinessBillCostInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<BusinessBillCostInfoDO> findByCondition(BusinessBillCostInfoDO businessBillCostInfo, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>business_bill_cost_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from business_bill_cost_info where (1 = 1)</tt>
	 *
	 *	@param businessBillCostInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(BusinessBillCostInfoDO businessBillCostInfo) throws DataAccessException;

}