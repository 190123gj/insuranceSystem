/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.InsuranceContactLetterDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>insurance_contact_letter_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/insurance_contact_letter_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface InsuranceContactLetterDetailDAO {
	/**
	 *  Insert one <tt>InsuranceContactLetterDetailDO</tt> object to DB table <tt>insurance_contact_letter_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into insurance_contact_letter_detail(letter_detail_id,letter_id,product_id,product_name,insurance_amount,premium_amount,broker_amount,first_premium_amount,period) values (?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param insuranceContactLetterDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(InsuranceContactLetterDetailDO insuranceContactLetterDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>insurance_contact_letter_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update insurance_contact_letter_detail set letter_id=?, product_id=?, product_name=?, insurance_amount=?, premium_amount=?, broker_amount=?, first_premium_amount=?, period=? where (letter_detail_id = ?)</tt>
	 *
	 *	@param insuranceContactLetterDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(InsuranceContactLetterDetailDO insuranceContactLetterDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>insurance_contact_letter_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select letter_detail_id, letter_id, product_id, product_name, insurance_amount, premium_amount, broker_amount, first_premium_amount, period from insurance_contact_letter_detail where (letter_detail_id = ?)</tt>
	 *
	 *	@param letterDetailId
	 *	@return InsuranceContactLetterDetailDO
	 *	@throws DataAccessException
	 */	 
    public InsuranceContactLetterDetailDO findById(long letterDetailId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>insurance_contact_letter_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from insurance_contact_letter_detail where (letter_detail_id = ?)</tt>
	 *
	 *	@param letterDetailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long letterDetailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>insurance_contact_letter_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select letter_detail_id, letter_id, product_id, product_name, insurance_amount, premium_amount, broker_amount, first_premium_amount, period from insurance_contact_letter_detail where (1 = 1)</tt>
	 *
	 *	@param insuranceContactLetterDetail
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<InsuranceContactLetterDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<InsuranceContactLetterDetailDO> findByCondition(InsuranceContactLetterDetailDO insuranceContactLetterDetail, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>insurance_contact_letter_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from insurance_contact_letter_detail where (1 = 1)</tt>
	 *
	 *	@param insuranceContactLetterDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(InsuranceContactLetterDetailDO insuranceContactLetterDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>insurance_contact_letter_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select letter_detail_id, letter_id, product_id, product_name, insurance_amount, premium_amount, broker_amount, first_premium_amount, period from insurance_contact_letter_detail where (letter_id = ?)</tt>
	 *
	 *	@param letterId
	 *	@return List<InsuranceContactLetterDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<InsuranceContactLetterDetailDO> getInsuranceContactLetterDetails(long letterId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>insurance_contact_letter_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from insurance_contact_letter_detail where (letter_id = ?)</tt>
	 *
	 *	@param letterId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByLetterId(long letterId) throws DataAccessException;

	/**
	 *  Query DB table <tt>insurance_contact_letter_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select letter_detail_id, letter_id, product_id, product_name, insurance_amount, premium_amount, broker_amount, first_premium_amount, period from insurance_contact_letter_detail where (1 = 1)</tt>
	 *
	 *	@param letterId
	 *	@param productId
	 *	@return InsuranceContactLetterDetailDO
	 *	@throws DataAccessException
	 */	 
    public InsuranceContactLetterDetailDO findInsuranceContactLetterDetail(long letterId, long productId) throws DataAccessException;

}