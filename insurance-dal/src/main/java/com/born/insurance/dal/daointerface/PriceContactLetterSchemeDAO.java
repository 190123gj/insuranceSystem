/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.PriceContactLetterSchemeDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>price_contact_letter_scheme</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/price_contact_letter_scheme.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface PriceContactLetterSchemeDAO {
	/**
	 *  Insert one <tt>PriceContactLetterSchemeDO</tt> object to DB table <tt>price_contact_letter_scheme</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into price_contact_letter_scheme(id,letter_demand_id,ask_date,special_req,claim_form,accident_system,discovery_period,accident_claim_system,retrospective_period,version,ext) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param priceContactLetterScheme
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(PriceContactLetterSchemeDO priceContactLetterScheme) throws DataAccessException;

	/**
	 *  Update DB table <tt>price_contact_letter_scheme</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update price_contact_letter_scheme set letter_demand_id=?, ask_date=?, special_req=?, claim_form=?, accident_system=?, discovery_period=?, accident_claim_system=?, retrospective_period=?, version=?, ext=? where (id = ?)</tt>
	 *
	 *	@param priceContactLetterScheme
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(PriceContactLetterSchemeDO priceContactLetterScheme) throws DataAccessException;

	/**
	 *  Query DB table <tt>price_contact_letter_scheme</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, letter_demand_id, ask_date, special_req, claim_form, accident_system, discovery_period, accident_claim_system, retrospective_period, version, ext from price_contact_letter_scheme where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return PriceContactLetterSchemeDO
	 *	@throws DataAccessException
	 */	 
    public PriceContactLetterSchemeDO findById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>price_contact_letter_scheme</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from price_contact_letter_scheme where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>price_contact_letter_scheme</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from price_contact_letter_scheme where (letter_demand_id = ?)</tt>
	 *
	 *	@param letterDemandId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByLetterDemandId(long letterDemandId) throws DataAccessException;

	/**
	 *  Query DB table <tt>price_contact_letter_scheme</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, letter_demand_id, ask_date, special_req, claim_form, accident_system, discovery_period, accident_claim_system, retrospective_period, version, ext from price_contact_letter_scheme where (1 = 1)</tt>
	 *
	 *	@param priceContactLetterScheme
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<PriceContactLetterSchemeDO>
	 *	@throws DataAccessException
	 */	 
    public List<PriceContactLetterSchemeDO> findByCondition(PriceContactLetterSchemeDO priceContactLetterScheme, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>price_contact_letter_scheme</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from price_contact_letter_scheme where (1 = 1)</tt>
	 *
	 *	@param priceContactLetterScheme
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(PriceContactLetterSchemeDO priceContactLetterScheme) throws DataAccessException;

}