/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.SysParamDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>sys_param</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/sys_param.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface SysParamDAO {
	/**
	 *  Insert one <tt>SysParamDO</tt> object to DB table <tt>sys_param</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into sys_param(param_name,param_value,extend_attribute_one,extend_attribute_two,raw_add_time,description) values (?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param sysParam
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String insert(SysParamDO sysParam) throws DataAccessException;

	/**
	 *  Update DB table <tt>sys_param</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sys_param set param_value=?, extend_attribute_one=?, extend_attribute_two=?, description=? where (param_name = ?)</tt>
	 *
	 *	@param sysParam
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(SysParamDO sysParam) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>sys_param</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from sys_param where (param_name = ?)</tt>
	 *
	 *	@param paramName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByParamName(String paramName) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_param</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select param_name, param_value, extend_attribute_one, extend_attribute_two, raw_add_time, raw_update_time, description from sys_param where (param_name = ?)</tt>
	 *
	 *	@param paramName
	 *	@return SysParamDO
	 *	@throws DataAccessException
	 */	 
    public SysParamDO findById(String paramName) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_param</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select param_name, param_value, extend_attribute_one, extend_attribute_two, raw_add_time, raw_update_time, description from sys_param</tt>
	 *
	 *	@return List<SysParamDO>
	 *	@throws DataAccessException
	 */	 
    public List<SysParamDO> findAll() throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_param</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select param_name, param_value, extend_attribute_one, extend_attribute_two, raw_add_time, raw_update_time, description from sys_param where (param_name LIKE ?) order by param_name ASC</tt>
	 *
	 *	@param paramName
	 *	@return List<SysParamDO>
	 *	@throws DataAccessException
	 */	 
    public List<SysParamDO> findByLike(String paramName) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_param</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from sys_param where (param_name = ?)</tt>
	 *
	 *	@param sysParam
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long paramInfoQueryCount(SysParamDO sysParam) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_param</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select param_name, param_value, extend_attribute_one, extend_attribute_two, raw_add_time, raw_update_time, description from sys_param where (param_name = ?)</tt>
	 *
	 *	@param sysParam
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<SysParamDO>
	 *	@throws DataAccessException
	 */	 
    public List<SysParamDO> paramInfoQueryList(SysParamDO sysParam, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Update DB table <tt>sys_param</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sys_param set param_value=?, extend_attribute_one=?, extend_attribute_two=?, description=? where (param_name = ?)</tt>
	 *
	 *	@param sysParam
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateAutoTest(SysParamDO sysParam) throws DataAccessException;

}