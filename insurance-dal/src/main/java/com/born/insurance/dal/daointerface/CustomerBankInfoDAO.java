/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.CustomerBankInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>customer_bank_info</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/customer_bank_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface CustomerBankInfoDAO {
	/**
	 *  Insert one <tt>CustomerBankInfoDO</tt> object to DB table <tt>customer_bank_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into customer_bank_info(id,user_id,bank_card_name,bank_card_no,open_bank_name,bank_type,bank_province,bank_city,is_default,bank_order,remark,raw_add_time,is_del) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param customerBankInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(CustomerBankInfoDO customerBankInfo) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_bank_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_bank_info set user_id=?, bank_card_name=?, bank_card_no=?, open_bank_name=?, bank_type=?, bank_province=?, bank_city=?, is_default=?, bank_order=?, remark=?, is_del=? where (id = ?)</tt>
	 *
	 *	@param customerBankInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(CustomerBankInfoDO customerBankInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_bank_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, bank_card_name, bank_card_no, open_bank_name, bank_type, bank_province, bank_city, is_default, bank_order, remark, raw_add_time, raw_update_time, is_del from customer_bank_info where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return CustomerBankInfoDO
	 *	@throws DataAccessException
	 */	 
    public CustomerBankInfoDO findById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>customer_bank_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from customer_bank_info where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>customer_bank_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from customer_bank_info where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByUserId(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_bank_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, bank_card_name, bank_card_no, open_bank_name, bank_type, bank_province, bank_city, is_default, bank_order, remark, raw_add_time, raw_update_time, is_del from customer_bank_info where (1 = 1)</tt>
	 *
	 *	@param customerBankInfo
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<CustomerBankInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<CustomerBankInfoDO> findByCondition(CustomerBankInfoDO customerBankInfo, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_bank_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from customer_bank_info where (1 = 1)</tt>
	 *
	 *	@param customerBankInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(CustomerBankInfoDO customerBankInfo) throws DataAccessException;

}