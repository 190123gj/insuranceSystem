/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.FormTemplateFieldDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>form_template_field</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/form_template_field.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface FormTemplateFieldDAO {
	/**
	 *  Insert one <tt>FormTemplateFieldDO</tt> object to DB table <tt>form_template_field</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into form_template_field(id,owner_id,owner_type,name,code,ctrl_type,sort_order,required,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param formTemplateField
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(FormTemplateFieldDO formTemplateField) throws DataAccessException;

	/**
	 *  Update DB table <tt>form_template_field</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update form_template_field set owner_id=?, owner_type=?, name=?, code=?, ctrl_type=?, sort_order=?, required=? where (id = ?)</tt>
	 *
	 *	@param formTemplateField
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(FormTemplateFieldDO formTemplateField) throws DataAccessException;

	/**
	 *  Query DB table <tt>form_template_field</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, owner_id, owner_type, name, code, ctrl_type, sort_order, required, raw_add_time, raw_update_time from form_template_field where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return FormTemplateFieldDO
	 *	@throws DataAccessException
	 */	 
    public FormTemplateFieldDO findById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>form_template_field</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from form_template_field where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>form_template_field</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, owner_id, owner_type, name, code, ctrl_type, sort_order, required, raw_add_time, raw_update_time from form_template_field where (1 = 1)</tt>
	 *
	 *	@param formTemplateField
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<FormTemplateFieldDO>
	 *	@throws DataAccessException
	 */	 
    public List<FormTemplateFieldDO> findByCondition(FormTemplateFieldDO formTemplateField, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>form_template_field</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from form_template_field where (1 = 1)</tt>
	 *
	 *	@param formTemplateField
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(FormTemplateFieldDO formTemplateField) throws DataAccessException;

}