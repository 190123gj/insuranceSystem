/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.ProjectSetupDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>project_setup</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/project_setup.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface ProjectSetupDAO {
	/**
	 *  Insert one <tt>ProjectSetupDO</tt> object to DB table <tt>project_setup</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into project_setup(project_setup_id,project_setup_name,customer_user_id,customer_user_name,insurance_catalog_id,channels_user_id,channels_user_name,proportion,proportion_type,setup_user_id,setup_user_name,setup_use_type,setup_use_name,setup_use_id,beginDate,endDate,remark,status,form_id,creator_id,creator_name,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param projectSetup
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProjectSetupDO projectSetup) throws DataAccessException;

	/**
	 *  Update DB table <tt>project_setup</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update project_setup set project_setup_name=?, customer_user_id=?, customer_user_name=?, insurance_catalog_id=?, channels_user_id=?, channels_user_name=?, proportion=?, proportion_type=?, setup_user_id=?, setup_user_name=?, setup_use_type=?, setup_use_name=?, setup_use_id=?, beginDate=?, endDate=?, remark=?, status=?, form_id=?, creator_id=?, creator_name=? where (project_setup_id = ?)</tt>
	 *
	 *	@param projectSetup
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProjectSetupDO projectSetup) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_setup</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select project_setup_id, project_setup_name, customer_user_id, customer_user_name, insurance_catalog_id, channels_user_id, channels_user_name, proportion, proportion_type, setup_user_id, setup_user_name, setup_use_type, setup_use_name, setup_use_id, beginDate, endDate, remark, status, form_id, creator_id, creator_name, raw_add_time, raw_update_time from project_setup where (project_setup_id = ?)</tt>
	 *
	 *	@param projectSetupId
	 *	@return ProjectSetupDO
	 *	@throws DataAccessException
	 */	 
    public ProjectSetupDO findById(long projectSetupId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_setup</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select project_setup_id, project_setup_name, customer_user_id, customer_user_name, insurance_catalog_id, channels_user_id, channels_user_name, proportion, proportion_type, setup_user_id, setup_user_name, setup_use_type, setup_use_name, setup_use_id, beginDate, endDate, remark, status, form_id, creator_id, creator_name, raw_add_time, raw_update_time from project_setup where (form_id = ?)</tt>
	 *
	 *	@param formId
	 *	@return ProjectSetupDO
	 *	@throws DataAccessException
	 */	 
    public ProjectSetupDO findByFormId(long formId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>project_setup</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from project_setup where (project_setup_id = ?)</tt>
	 *
	 *	@param projectSetupId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long projectSetupId) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_setup</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select project_setup_id, project_setup_name, customer_user_id, customer_user_name, insurance_catalog_id, channels_user_id, channels_user_name, proportion, proportion_type, setup_user_id, setup_user_name, setup_use_type, setup_use_name, setup_use_id, beginDate, endDate, remark, status, form_id, creator_id, creator_name, raw_add_time, raw_update_time from project_setup where (1 = 1)</tt>
	 *
	 *	@param projectSetup
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<ProjectSetupDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProjectSetupDO> findByCondition(ProjectSetupDO projectSetup, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>project_setup</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from project_setup where (1 = 1)</tt>
	 *
	 *	@param projectSetup
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(ProjectSetupDO projectSetup) throws DataAccessException;

}