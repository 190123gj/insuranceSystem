/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.born.insurance.dal.daointerface;

// auto generated imports
import com.born.insurance.dal.dataobject.CustomerRelationApplyDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>customer_relation_apply</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/customer_relation_apply.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface CustomerRelationApplyDAO {
	/**
	 *  Insert one <tt>CustomerRelationApplyDO</tt> object to DB table <tt>customer_relation_apply</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into customer_relation_apply(apply_relation_id,parent_id,child_id,status,raw_add_time,remark,creator_id,creator_name) values (?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param customerRelationApply
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(CustomerRelationApplyDO customerRelationApply) throws DataAccessException;

	/**
	 *  Update DB table <tt>customer_relation_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update customer_relation_apply set parent_id=?, child_id=?, status=?, remark=?, creator_id=?, creator_name=? where (apply_relation_id = ?)</tt>
	 *
	 *	@param customerRelationApply
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(CustomerRelationApplyDO customerRelationApply) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_relation_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select apply_relation_id, parent_id, child_id, status, raw_add_time, raw_update_time, remark, creator_id, creator_name from customer_relation_apply where (apply_relation_id = ?)</tt>
	 *
	 *	@param applyRelationId
	 *	@return CustomerRelationApplyDO
	 *	@throws DataAccessException
	 */	 
    public CustomerRelationApplyDO findById(long applyRelationId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>customer_relation_apply</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from customer_relation_apply where (apply_relation_id = ?)</tt>
	 *
	 *	@param applyRelationId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long applyRelationId) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_relation_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select apply_relation_id, parent_id, child_id, status, raw_add_time, raw_update_time, remark, creator_id, creator_name from customer_relation_apply where (1 = 1)</tt>
	 *
	 *	@param customerRelationApply
	 *	@param sortCol
	 *	@param sortOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<CustomerRelationApplyDO>
	 *	@throws DataAccessException
	 */	 
    public List<CustomerRelationApplyDO> findByCondition(CustomerRelationApplyDO customerRelationApply, String sortCol, String sortOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>customer_relation_apply</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from customer_relation_apply where (1 = 1)</tt>
	 *
	 *	@param customerRelationApply
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(CustomerRelationApplyDO customerRelationApply) throws DataAccessException;

}