<table sqlname="price_contact_letter_scheme">
    <operation name="insert" paramtype="object">
        <sql>
            <![CDATA[
				INSERT INTO price_contact_letter_scheme(id,letter_demand_id,ask_date,special_req,claim_form,accident_system,discovery_period,accident_claim_system,retrospective_period,version,ext) VALUES (?,?,?,?,?,?,?,?,?,?,?)
			]]>
        </sql>
		
		<sqlmap>
			<![CDATA[
				INSERT INTO price_contact_letter_scheme(id,letter_demand_id,ask_date,special_req,claim_form,accident_system,discovery_period,accident_claim_system,retrospective_period,version,ext) VALUES (#id#,#letterDemandId#,#askDate#,#specialReq#,#claimForm#,#accidentSystem#,#discoveryPeriod#,#accidentClaimSystem#,#retrospectivePeriod#,#version#,#ext#)
		        <selectKey  resultClass ="long"  keyProperty ="id" >   
		          		 SELECT LAST_INSERT_ID() AS ID 
		      	</selectKey>
				]]>
		</sqlmap>

    </operation>

    <operation name="update" paramtype="object">
        <sql>
            <![CDATA[
			UPDATE price_contact_letter_scheme SET letter_demand_id=?,ask_date=?,special_req=?,claim_form=?,accident_system=?,discovery_period=?,accident_claim_system=?,retrospective_period=?,version=?,ext=? WHERE id=?
                  
			]]>
        </sql>
    </operation>

    <operation name="findById" >
        <sql>
            <![CDATA[
			  SELECT  id ,letter_demand_id ,ask_date ,special_req ,claim_form ,accident_system ,discovery_period ,accident_claim_system ,retrospective_period ,version ,ext  FROM price_contact_letter_scheme WHERE id=?
			]]>
        </sql>
    </operation>


    <operation name="deleteById" paramtype="string">
        <sql>
            <![CDATA[
				  DELETE FROM price_contact_letter_scheme WHERE id=?
			]]>
        </sql>
    </operation>

    <operation name="deleteByLetterDemandId" paramtype="string">
        <sql>
            <![CDATA[
				  DELETE FROM price_contact_letter_scheme WHERE letter_demand_id=?
			]]>
        </sql>
    </operation>


    <operation name="findByCondition" paramtype="object" multiplicity="many">
        <extraparams>
            <param name="sortCol" javatype="java.lang.String" />
            <param name="sortOrder" javatype="java.lang.String" />
            <param name="limitStart" javatype="long" />
            <param name="pageSize" javatype="long" />
        </extraparams>
        <sql>
            <![CDATA[
					SELECT  id ,letter_demand_id ,ask_date ,special_req ,claim_form ,accident_system ,discovery_period ,accident_claim_system ,retrospective_period ,version ,ext  FROM price_contact_letter_scheme WHERE 1=1
	        ]]>
        </sql>
        <sqlmap>
            <![CDATA[
	         SELECT  id ,letter_demand_id ,ask_date ,special_req ,claim_form ,accident_system ,discovery_period ,accident_claim_system ,retrospective_period ,version ,ext  FROM price_contact_letter_scheme where 1=1
           <dynamic>
                  <isGreaterThan property="priceContactLetterScheme.letterDemandId"  compareValue="0" prepend=" and ">
	                letter_demand_id = #priceContactLetterScheme.letterDemandId#
	            </isGreaterThan>
			</dynamic>
	         <isNotEmpty property="sortCol" prepend=" order by ">
	             $sortCol$
	                <isNotEmpty property="sortOrder">
              	 		$sortOrder$
             		</isNotEmpty>
	         </isNotEmpty>
            LIMIT #limitStart#,#pageSize#
	        ]]>
        </sqlmap>
    </operation>
    <operation name="findByConditionCount" paramtype="object" >

        <sql>
            <![CDATA[
	        SELECT  count(*) FROM price_contact_letter_scheme WHERE  1=1
	        ]]>
        </sql>
        <sqlmap>
            <![CDATA[
	           SELECT  count(*) FROM price_contact_letter_scheme  where 1=1
	        <dynamic>
                  <isGreaterThan property="letterDemandId"  compareValue="0" prepend=" and ">
	                letter_demand_id = #letterDemandId#
	            </isGreaterThan>
			</dynamic>
	        ]]>
        </sqlmap>
    </operation>
</table>
